###############################################################################
# Greymatter 1.8.1                            
# Copyright (c)2000-2007, The Greymatter team 
# http://greymatterforum.proboards82.com/     
# By possessing this software, you agree not to hold the author responsible for 
# any problems that may arise from your installation or usage of Greymatter 
# itself, or from any content generated by yourself or others through the use of 
# this program.  You <I>may</I> freely modify and redistribute this program, so 
# long as every copyright notice (including in this manual and in the Greymatter 
# code) remains fully intact.  Finally, you may <I>not</I> sell or in any way 
# make a financial profit from this program, either in original or modified form.
# Your possession of this software signifies that you agree to these terms; 
# please delete your copy of this software if you don't agree to these terms.
# Original Creators Noah Grey
###############################################################################

use lib 'libs';

use Gm_Constants;
use Gm_Utils qw( println );
use Gm_Web;
use Gm_Storage;
use Gm_Security;
use Gm_Core;


### GLOBAL VARS
my $newTemplates = (); # init to empty
my $newConfigs = (); # init to empty
my %AUTHOR = ();

$cookiename = Gm_Constants::GM_COOKIE_PW;

$authorIP = $ENV{'REMOTE_ADDR'};

# -----------------
# program variables
# -----------------

# NOTE that the version is MAJOR NUMBER.YEAR.NO_OF_REL_THAT_YEAR
# e.g. a major refactoring is done in 2007 the release would be 1.7.1
# later that year a security fix comes out so release would be 1.7.2
# Also NOTE that in deference to a previous Greymatter developer, this GM
# (which is perl based) will retain the Major version of 1.  The previous
#developer has begun a php rewrite of Greymatter and is using the Major version 2
$gmversion = Gm_Constants::GM_VERSION;


## Setting up some variables that are used below
# TODO refactor out these intermeditate variables.  The code using these variables should be in gm.cgi
# or Gm_Web.pm
$gmfonttag = $Gm_Web::gmfonttag;
$gmadmincss = $Gm_Web::gmadmincss;
$gmheadtag = $Gm_Web::gmheadtag;


## TODO get rid of frametoptow and framebottomtwo
$gmframetop = $Gm_Web::gmframetop;
$gmframebottom = $Gm_Web::gmframebottom;
## TODO this shouldn't be a global variable, get rid of once all pertainent code is in gm.cgi
$statusnote = Gm_Constants::EMPTY;


# ------------------
# emoticons subroutine
# ------------------
# DEPRECATED: Gm_Core::translateEmoticons
sub gm_emoticons {
	die( "gm_emoticons has been DEPRECATED");
}

# ------------------
# emoticons code display subroutine
# ------------------
# added by flipped cracker 9/17/2003
# version 1.3
## DEPRECATED BY: emoticonsCode in gm.cgi
sub gm_emoticons_code {
	die( "gm_emoticons_code has been DEPRECATED");
}


# ---------------
# date subroutine
# ---------------
# DEPRECATED: Gm_Utils::getStdDate( $serveroffset );
#

# ----------------
# read the counter
# ----------------
# TODO, DEPRECATE THIS AND USE GETCOUNTERS EVERYWHERE
# DEPRECATED: Gm_Storage::getCounters
sub gm_readcounter {

my $gmcounters = Gm_Storage::getCounters( errHandler=>\&Gm_Web::displayAdminErrorExit );

$newentrynumber = $gmcounters->{'entrytotal'};
$newarchivenumber = $gmcounters->{'archivetotal'};
$newstayattopnumber = $gmcounters->{'stayattopentry'};
$newalltimepktotalnumber = $gmcounters->{'karmapos'};
$newalltimenktotalnumber = $gmcounters->{'karmaneg'};
$newalltimecommentstotalnumber = $gmcounters->{'commenttotal'};
$newalltimeopenentriesnumber = $gmcounters->{'opentotal'};
$newalltimeclosedentriesnumber = $gmcounters->{'closedtotal'};

}

# -----------------
# write the counter
# -----------------
# TODO, DEPRECATE THIS AND USE SETCOUNTERS EVERYWHERE
# DEPRECATED: Gm_Storage::setCounters
sub gm_writecounter {

my %counters = ();
$counters{'entrytotal'} = $newentrynumber;
$counters{'archivetotal'} = $newarchivenumber;
$counters{'stayattopentry'} = $newstayattopnumber;
$counters{'karmapos'} = $newalltimepktotalnumber;
$counters{'karmaneg'} = $newalltimenktotalnumber;
$counters{'commenttotal'} = $newalltimecommentstotalnumber;
$counters{'opentotal'} = $newalltimeopenentriesnumber;
$counters{'closedtotal'} = $newalltimeclosedentriesnumber;

Gm_Storage::setCounters( list=>\%counters, errHandler=>\&Gm_Web::displayAdminErrorExit );

}

# ------------------
# read the templates
## TODO REMOVE ALL REFERENCES TO THIS CALL.  REPLACED BY GM_STORAGE FUNCTION
## if leave, access global newTemplates hash reference
# ------------------
# DEPRECATED: Gm_Storage::getTemplates
sub gm_readtemplates {

$newTemplates = Gm_Storage::getTemplates( errHandler=>\&Gm_Web::displayAdminErrorExit );

### TODO, NOW THAT WE ARE USING HASH FOR TEMPLATES, GO THROUGH AND REMOVE REFERENCES TO 
## INVIDUAL VARS BELOW, E.G. REPLACE $gmindextemplate WITH $newTemplates->{'gmindextemplate'}
$gmindextemplate = $newTemplates->{'gmindextemplate'};
$gmentrypagetemplate = $newTemplates->{'gmentrypagetemplate'};
$gmarchiveindextemplate = $newTemplates->{'gmarchiveindextemplate'};
$gmarchiveentrypagetemplate = $newTemplates->{'gmarchiveentrypagetemplate'};
$gmentrytemplate = $newTemplates->{'gmentrytemplate'};
$gmarchiveentrytemplate = $newTemplates->{'gmarchiveentrytemplate'};
$gmstayattoptemplate = $newTemplates->{'gmstayattoptemplate'};
$gmdatetemplate = $newTemplates->{'gmdatetemplate'};
$gmcommentstemplate = $newTemplates->{'gmcommentstemplate'};
$gmcommentsformtemplate = $newTemplates->{'gmcommentsformtemplate'};
$gmparaseparationtemplate = $newTemplates->{'gmparaseparationtemplate'};
$gmkarmaformtemplate = $newTemplates->{'gmkarmaformtemplate'};
$gmlinktargettemplate = $newTemplates->{'gmlinktargettemplate'};
$gmdategroupingfootertemplate = $newTemplates->{'gmdategroupingfootertemplate'};
$gmkarmalinktemplate = $newTemplates->{'gmkarmalinktemplate'};
$gmcommentslinktemplate = $newTemplates->{'gmcommentslinktemplate'};
$gmcommentauthoremailtemplate = $newTemplates->{'gmcommentauthoremailtemplate'};
$gmcommentauthorhomepagetemplate = $newTemplates->{'gmcommentauthorhomepagetemplate'};
$gmcommentdividertemplate = $newTemplates->{'gmcommentdividertemplate'};
$gmmoreentrytemplate = $newTemplates->{'gmmoreentrytemplate'};
$gmmoreentrypagetemplate = $newTemplates->{'gmmoreentrypagetemplate'};
$gmmorearchiveentrypagetemplate = $newTemplates->{'gmmorearchiveentrypagetemplate'};
$gmpreviouslinktemplate = $newTemplates->{'gmpreviouslinktemplate'};
$gmnextlinktemplate = $newTemplates->{'gmnextlinktemplate'};
$gmpreviousmorelinktemplate = $newTemplates->{'gmpreviousmorelinktemplate'};
$gmnextmorelinktemplate = $newTemplates->{'gmnextmorelinktemplate'};
$gmarchivemasterindextemplate = $newTemplates->{'gmarchivemasterindextemplate'};
$gmlogarchiveslinktemplate = $newTemplates->{'gmlogarchiveslinktemplate'};
$gmentrypagelinktemplate = $newTemplates->{'gmentrypagelinktemplate'};
$gmmoreentrypagelinktemplate = $newTemplates->{'gmmoreentrypagelinktemplate'};
$gmlogarchiveslinkseparatortemplate = $newTemplates->{'gmlogarchiveslinkseparatortemplate'};
$gmentrypagelinkseparatortemplate = $newTemplates->{'gmentrypagelinkseparatortemplate'};
$gmentrypagelinkmonthseparatortemplate = $newTemplates->{'gmentrypagelinkmonthseparatortemplate'};
$gmentrypagelinkdayseparatortemplate = $newTemplates->{'gmentrypagelinkdayseparatortemplate'};
$gmentrypagelinkyearseparatortemplate = $newTemplates->{'gmentrypagelinkyearseparatortemplate'};
$gmheadertemplate = $newTemplates->{'gmheadertemplate'};
$gmfootertemplate = $newTemplates->{'gmfootertemplate'};
$gmsidebartemplate = $newTemplates->{'gmsidebartemplate'};
$gmentryseparatortemplate = $newTemplates->{'gmentryseparatortemplate'};
$gmarchiveentryseparatortemplate = $newTemplates->{'gmarchiveentryseparatortemplate'};
$gmmorearchiveentrytemplate = $newTemplates->{'gmmorearchiveentrytemplate'};
$gmdatearchivetemplate = $newTemplates->{'gmdatearchivetemplate'};
$gmlogarchiveslinkweeklytemplate = $newTemplates->{'gmlogarchiveslinkweeklytemplate'};
$gmcustomonetemplate = $newTemplates->{'gmcustomonetemplate'};
$gmcustomtwotemplate = $newTemplates->{'gmcustomtwotemplate'};
$gmcustomthreetemplate = $newTemplates->{'gmcustomthreetemplate'};
$gmcustomfourtemplate = $newTemplates->{'gmcustomfourtemplate'};
$gmcustomfivetemplate = $newTemplates->{'gmcustomfivetemplate'};
$gmcustomsixtemplate = $newTemplates->{'gmcustomsixtemplate'};
$gmcustomseventemplate = $newTemplates->{'gmcustomseventemplate'};
$gmcustomeighttemplate = $newTemplates->{'gmcustomeighttemplate'};
$gmcustomninetemplate = $newTemplates->{'gmcustomninetemplate'};
$gmcustomtentemplate = $newTemplates->{'gmcustomtentemplate'};
$gmpopuppagetemplate = $newTemplates->{'gmpopuppagetemplate'};
$gmpopupcodetemplate = $newTemplates->{'gmpopupcodetemplate'};
$gmsearchformtemplate = $newTemplates->{'gmsearchformtemplate'};
$gmsearchresultspagetemplate = $newTemplates->{'gmsearchresultspagetemplate'};
$gmsearchresultsentrytemplate = $newTemplates->{'gmsearchresultsentrytemplate'};
$gmcalendartablebeginningtemplate = $newTemplates->{'gmcalendartablebeginningtemplate'};
$gmcalendartableendingtemplate = $newTemplates->{'gmcalendartableendingtemplate'};
$gmcalendarblankcelltemplate = $newTemplates->{'gmcalendarblankcelltemplate'};
$gmcalendarfullcelltemplate = $newTemplates->{'gmcalendarfullcelltemplate'};
$gmcalendarfullcelllinktemplate = $newTemplates->{'gmcalendarfullcelllinktemplate'};
$gmcalendarweekfulldaytemplate = $newTemplates->{'gmcalendarweekfulldaytemplate'};
$gmcalendarweekfulldaylinktemplate = $newTemplates->{'gmcalendarweekfulldaylinktemplate'};
$gmcommentpreviewdividertemplate = $newTemplates->{'gmcommentpreviewdividertemplate'};
$gmcommentpreviewformtemplate = $newTemplates->{'gmcommentpreviewformtemplate'};
$gmsmartlinknocommentstemplate = $newTemplates->{'gmsmartlinknocommentstemplate'};
$gmsmartlinkonecommenttemplate = $newTemplates->{'gmsmartlinkonecommenttemplate'};
$gmsmartlinkmanycommentstemplate = $newTemplates->{'gmsmartlinkmanycommentstemplate'};
$gmlinebreaktemplate = $newTemplates->{'gmlinebreaktemplate'};
$gmcommentlinktargettemplate = $newTemplates->{'gmcommentlinktargettemplate'};
$gmsmartentrymoodtemplate = $newTemplates->{'gmsmartentrymoodtemplate'};
$gmsmartentrymusictemplate = $newTemplates->{'gmsmartentrymusictemplate'};
$gmdategroupingfooterarchivetemplate = $newTemplates->{'gmdategroupingfooterarchivetemplate'};
$gmsmartemoticonscodetemplate = $newTemplates->{'gmsmartemoticonscodetemplate'};
$gmcookiescodetemplate = $newTemplates->{'gmcookiescodetemplate'};
$gmusererrorheadertemplate = $newTemplates->{'gmusererrorheadertemplate'};
$gmusererrorfootertemplate =  $newTemplates->{'gmusererrorfootertemplate'};
}

# ---------------------
# delouse all templates
# ---------------------
### TODO JUST LOOP THROUGH THE TEMPLATES HASH ARRAY ONCE ALL THESE REFERENCES ARE REMOVED
# DEPRECATED BY: viewTemplates in gm.cgi
sub gm_delousealltemplates {
	die( "gm_delousealltemplates has been DEPRECATED");
}

# --------------------
# read the config file
## TODO REMOVE ALL REFERENCES TO THIS CALL.  REPLACED BY GM_STORAGE FUNCTION
## if leave, access global newConfigs hash reference
# --------------------
# DEPRECATED: Gm_Storage::getConfigs
sub gm_readconfig {

	$newConfigs = Gm_Storage::getConfigs( errHandler=>\&Gm_Web::displayAdminErrorExit );

	### TODO, NOW THAT WE ARE USING HASH FOR TEMPLATES, GO THROUGH AND REMOVE REFERENCES TO 
	## INVIDUAL VARS BELOW, E.G. REPLACE $gmindextemplate WITH $newTemplates->{'gmindextemplate'}
	$LogPath = $newConfigs->{'gmlogpath'};
	$EntriesPath = $newConfigs->{'gmentriespath'};
	$LogWebPath = $newConfigs->{'gmlogwebpath'};
	$EntriesWebPath = $newConfigs->{'gmentrieswebpath'};
	$NotifyEmail = $newConfigs->{'gmnotifyemail'};
	$indexfilename = $newConfigs->{'gmindexfilename'};
	$entrysuffix = $newConfigs->{'gmentrysuffix'};
	$indexdays = $newConfigs->{'gmindexdays'};
	$serveroffset = $newConfigs->{'gmserveroffset'};
	$timezone = $newConfigs->{'gmtimezone'};
	$keeplog = $newConfigs->{'gmkeeplog'};
	$posttoarchives = $newConfigs->{'gmposttoarchives'};
	$allowkarmadefault = $newConfigs->{'gmallowkarmadefault'};
	$allowcommentsdefault = $newConfigs->{'gmallowcommentsdefault'};
	$commentsorder = $newConfigs->{'gmcommentsorder'};
	$generateentrypages = $newConfigs->{'gmgenerateentrypages'};
	$allowhtmlincomments = $newConfigs->{'gmallowhtmlincomments'};
	$logkarmaandcomments = $newConfigs->{'gmlogkarmaandcomments'};
	$mailprog = $newConfigs->{'gmmailprog'};
	$NotifyForStatus = $newConfigs->{'gmnotifyforstatus'};
	$autolinkurls = $newConfigs->{'gmautolinkurls'};
	$striplinesfromcomments = $newConfigs->{'gmstriplinesfromcomments'};
	$allowmultiplekarmavotes = $newConfigs->{'gmallowmultiplekarmavotes'};
	$versionsetup = $newConfigs->{'gmversionsetup'};
	$cgilocalpath = $newConfigs->{'gmcgilocalpath'};
	$cgiwebpath = $newConfigs->{'gmcgiwebpath'};
	$concurrentmainandarchives = $newConfigs->{'gmconcurrentmainandarchives'};
	$keeparchivemasterindex = $newConfigs->{'gmkeeparchivemasterindex'};
	$entrylistsortorder = $newConfigs->{'gmentrylistsortorder'};
	$allowkarmaorcomments = $newConfigs->{'gmallowkarmaorcomments'};
	$entrylistcountnumber = $newConfigs->{'gmentrylistcountnumber'};
	$cookiesallowed = $newConfigs->{'gmcookiesallowed'};
	$logarchivesuffix = $newConfigs->{'gmlogarchivesuffix'};
	$censorlist = $newConfigs->{'gmcensorlist'};
	$censorenabled = $newConfigs->{'gmcensorenabled'};
	$keepmonthlyarchives = $newConfigs->{'gmkeepmonthlyarchives'};
	$defaultentrylistview = $newConfigs->{'gmdefaultentrylistview'};
	$linktocalendarentries = $newConfigs->{'gmlinktocalendarentries'};
	$automaticrebuilddefault = $newConfigs->{'gmautomaticrebuilddefault'};
	$commententrylistonlyifokay = $newConfigs->{'gmcommententrylistonlyifokay'};
	$otherfilelist = $newConfigs->{'gmotherfilelist'};
	$otherfilelistentryrebuild = $newConfigs->{'gmotherfilelistentryrebuild'};
	$archiveformat = $newConfigs->{'gmarchiveformat'};
	$inlineformatting = $newConfigs->{'gminlineformatting'};
	$uploadfilesallowed = $newConfigs->{'gmuploadfilesallowed'};
	$uploadfilesizelimit = $newConfigs->{'gmuploadfilesizelimit'};
	$emoticonspath = $newConfigs->{'gmemoticonspath'};
	$keepphphacklog = $newConfigs->{'gmkeepphphacklog'};
	$mailhacknotice = $newConfigs->{'gmmailhacknotice'};
	$emoticonsallowed = $newConfigs->{'gmemoticonsallowed'};
	$protectauthorname = $newConfigs->{'gmprotectauthorname'};
	$commentlinklimit = $newConfigs->{'gmcommentlinklimit'};
	$commentlinklimitnum = $newConfigs->{'gmcommentlinklimitnum'};
	$commentforcepreview = $newConfigs->{'gmcommentforcepreview'};
	$commentverify = $newConfigs->{'gmcommentverify'};
	$commentverifyphrase = $newConfigs->{'gmcommentverifyphrase'};
	$commentverifyreferer = $newConfigs->{'gmcommentverifyreferer'};
	$commentthrottle = $newConfigs->{'gmcommentthrottle'};
	$commentthrottlemin = $newConfigs->{'gmcommentthrottlemin'};
	
}

# ---------------------
# write the config file
# ---------------------
# DEPRECATED: Gm_Storage::setConfigs
sub gm_writeconfig {

if ($versionsetup eq Gm_Constants::EMPTY) { $versionsetup = $gmversion; }
my %confs = ();
$confs{'gmlogpath'} = $LogPath;
$confs{'gmentriespath'} = $EntriesPath;
$confs{'gmlogwebpath'} = $LogWebPath;
$confs{'gmentrieswebpath'} = $EntriesWebPath;
$confs{'gmnotifyemail'} = $NotifyEmail;
$confs{'gmindexfilename'} = $indexfilename;
$confs{'gmentrysuffix'} = $entrysuffix;
$confs{'gmindexdays'} = $indexdays;
$confs{'gmserveroffset'} = $serveroffset;
$confs{'gmtimezone'} = $timezone;
$confs{'gmkeeplog'} = $keeplog;
$confs{'gmposttoarchives'} = $posttoarchives;
$confs{'gmallowkarmadefault'} = $allowkarmadefault;
$confs{'gmallowcommentsdefault'} = $allowcommentsdefault;
$confs{'gmcommentsorder'} = $commentsorder;
$confs{'gmgenerateentrypages'} = $generateentrypages;
$confs{'gmallowhtmlincomments'} = $allowhtmlincomments;
$confs{'gmlogkarmaandcomments'} = $logkarmaandcomments;
$confs{'gmmailprog'} = $mailprog;
$confs{'gmnotifyforstatus'} = $NotifyForStatus;
$confs{'gmautolinkurls'} = $autolinkurls;
$confs{'gmstriplinesfromcomments'} = $striplinesfromcomments;
$confs{'gmallowmultiplekarmavotes'} = $allowmultiplekarmavotes;
$confs{'gmversionsetup'} = $versionsetup;
$confs{'gmversion'} = Gm_Constants::GM_VERSION;
$confs{'gmcgilocalpath'} = $cgilocalpath;
$confs{'gmcgiwebpath'} = $cgiwebpath;
$confs{'gmconcurrentmainandarchives'} = $concurrentmainandarchives;
$confs{'gmkeeparchivemasterindex'} = $keeparchivemasterindex;
$confs{'gmentrylistsortorder'} = $entrylistsortorder;
$confs{'gmallowkarmaorcomments'} = $allowkarmaorcomments;
$confs{'gmentrylistcountnumber'} = $entrylistcountnumber;
$confs{'gmcookiesallowed'} = $cookiesallowed;
$confs{'gmlogarchivesuffix'} = $logarchivesuffix;
$confs{'gmcensorlist'} = $censorlist;
$confs{'gmcensorenabled'} = $censorenabled;
$confs{'gmkeepmonthlyarchives'} = $keepmonthlyarchives;
$confs{'gmdefaultentrylistview'} = $defaultentrylistview;
$confs{'gmlinktocalendarentries'} = $linktocalendarentries;
$confs{'gmautomaticrebuilddefault'} = $automaticrebuilddefault;
$confs{'gmcommententrylistonlyifokay'} = $commententrylistonlyifokay;
$confs{'gmotherfilelist'} = $otherfilelist;
$confs{'gmotherfilelistentryrebuild'} = $otherfilelistentryrebuild;
$confs{'gmarchiveformat'} = $archiveformat;
$confs{'gminlineformatting'} = $inlineformatting;
$confs{'gmuploadfilesallowed'} = $uploadfilesallowed;
$confs{'gmuploadfilesizelimit'} = $uploadfilesizelimit;
$confs{'gmemoticonspath'} = $emoticonspath;
$confs{'gmkeepphphacklog'} = $keepphphacklog;
$confs{'gmmailhacknotice'} = $mailhacknotice;
$confs{'gmemoticonsallowed'} = $emoticonsallowed;
$confs{'gmprotectauthorname'} = $protectauthorname;
$confs{'gmcommentlinklimit'} = $commentlinklimit;
$confs{'gmcommentlinklimitnum'} = $commentlinklimitnum;
$confs{'gmcommentforcepreview'} = $commentforcepreview;
$confs{'gmcommentverify'} = $commentverify;
$confs{'gmcommentverifyphrase'} = $commentverifyphrase;
$confs{'gmcommentverifyreferer'} = $commentverifyreferer;
$confs{'gmcommentthrottle'} = $commentthrottle;
$confs{'gmcommentthrottlemin'} = $commentthrottlemin;

Gm_Storage::setConfigs( configs=>\%confs, errHandler=>\&Gm_Web::displayAdminErrorExit );

}

# ---------------------------------
# gather ye all thy entry variables
# ---------------------------------
# DEPRECATED: Gm_Core::getEntryVariables
sub gm_getentryvariables {
	die( "gm_getentryvariables has been DEPRECATED");
}

# -----------------
# comment collating
# -----------------
# DEPRECATED: Gm_Core::collateComments( entry=>$gmEntry );
sub gm_collatecomments {
	die( "gm_collatecomments has been DEPRECATED");
}

# ----------------
# format the entry
# ----------------
# Note: doesn't return string, just modifies it
# DEPRECATED: Gm_Core::translateEntryTemplates
sub gm_formatentry {
	die( "gm_formatentry has been DEPRECATED");
}

# ----------------------------
# generate the main index file
# ----------------------------
# DEPRECATED: Gm_Core::constructMainIndex
sub gm_generatemainindex {
	die( "gm_generatemainindex has been DEPRECATED");
}

# ---------------------
# generate archive file
# ---------------------
# DEPRECATED: Gm_Core::constructArchives
sub gm_generatearchive {
	die( "gm_generatearchive has been DEPRECATED");
}

# -----------------------
# rebuild connected files
# -----------------------
# DEPRECATED: Gm_Core::constructConnectedFiles
sub gm_rebuildconnectedfiles {
	die( "gm_rebuildconnectedfiles has been DEPRECATED");
}

# -------------------------
# generate log archive list
# -------------------------
# DEPRECATED: Gm_Core::generateArchiveLogList()
sub gm_generatearchiveloglist {
	die( "gm_generatearchiveloglist has been DEPRECATED");
}

# -----------------------
# generate log entry list
# -----------------------
# DEPRECATED BY: Gm_Core::generateEntryLogList
sub gm_generateentryloglist {
	die( "gm_generateentryloglist has been DEPRECATED");
}

# ----------------------------------------------
# generate log entry list for individual authors
# ----------------------------------------------
# DEPRECATED BY: Gm_Core::generateEntryLogListAuthor
sub gm_generateentryloglistauthor {
	die( "gm_generateentryloglistauthor has been DEPRECATED");
}

# -------------------------------------------
# generate log entry list for comment sorting
# -------------------------------------------
# DEPRECATED BY: Gm_Core::generateEntryLogListComments
sub gm_generateentryloglistcomments {
	die( "gm_generateentryloglistcomments has been DEPRECATED");
}


# ----------------------
# get log list variables
# ----------------------
# DEPRECATED by Gm_Core::getArchiveVariables
sub gm_getloglistvariables {
	die( "gm_getloglistvariables has been DEPRECATED");
}

# --------------------------
# entry list sub-sub routine
# --------------------------
## DEPRECATED BY: Gm_Core::translateArchiveTemplates
sub entrylistsubsub {
	die( "entrylistsubsub has been DEPRECATED");
}

# ----------------------------------
# generate external author variables
# ----------------------------------
## DEPRECATED BY: Gm_Core::translateExternalAuthorVariables
sub gm_generateexternalauthorvariables {
	die( "gm_generateexternalauthorvariables has been DEPRECATED");
}

# -----------------
# generate calendar
# -----------------
# DEPRECATED BY: Gm_Core::generateCalendar
sub gm_generatecalendar {
	die( "gm_generatecalendar has been DEPRECATED");
}

# -----------------
# log the author in
# -----------------
# DEPRECATED BY: Gm_Security::_login
sub gm_login {

## TODO PERHAPS THIS SHOULD USE CUSTOM ERRORHANDLER TO GIVE USER OPTION TO FIX FILES?
## DIAGNOSITICS CHMODS, BUT COULD GET TO IT IF IT DIDN'T ALREADY WORK, REALLY NEED
## TO RESTRICT DIAGNOSITIC ACCESS?
Gm_Storage::validateResources( errHandler=>\&Gm_Web::displayAdminErrorExit );

if ($loginnotice eq Gm_Constants::EMPTY) { $loginnotice = qq(<B><FONT COLOR="#000000">Login Prompt</font></B><P>); }

&gm_readconfig;

if ($cookiesallowed eq Gm_Constants::NO) {
	$getnameandpwcookie = Gm_Constants::EMPTY;
} else {
	$getnameandpwcookie = "<SCRIPT TYPE=\"text/javascript\" LANGUAGE=\"JavaScript\">\n<!--//\ndocument.gmloginform.authorname.value = getCookie(\"gmcookiename\");\ndocument.gmloginform.authorpassword.value = getCookie(\"$cookiename\");\ndocument.gmloginform.authorname.focus();\n//-->\n</SCRIPT>";
}


## TODO THIS SHOULD UTILIZE A PRINT_ADMIN_SCREEN TYPE FUNCTION
print Gm_Web::createRequestHeader();
print<<GMLOGIN;

$gmheadtag

$gmframetop
$loginnotice

<FORM ACTION="gm.cgi" METHOD=POST NAME="gmloginform">
<TABLE BORDER=0 CELLPADDING=3 CELLSPACING=0>
<TR><TD ALIGN=RIGHT>$gmfonttag Author:</font></TD><TD ALIGN=LEFT></font>
  <INPUT TYPE=TEXT CLASS="textinput" SIZE=20 NAME="authorname" STYLE="width: 200">$gmfonttag</TD></TR>
<TR><TD ALIGN=RIGHT>$gmfonttag Password:</font></TD><TD ALIGN=LEFT></font>
  <INPUT TYPE=PASSWORD CLASS="textinput" SIZE=20 NAME="authorpassword" STYLE="width: 200">$gmfonttag</TD></TR></TABLE>
  
<P>

<INPUT TYPE=SUBMIT CLASS="button" VALUE="Enter" STYLE="background: #D0FFD0; width: 75">
<INPUT TYPE=HIDDEN NAME="thomas" VALUE="login">
</FORM><P>

$getnameandpwcookie
$gmframebottom

</BODY>
</HTML>

GMLOGIN

exit;

}

# ------------------
# validate the login
# ------------------
## DEPRECATED BY Gm_Security::auth
sub gm_validate {

	&gm_readconfig; ## TODO COORDINATE SO ONLY DONE ONCE PER CALL
	&gm_bancheck; ## works off of some configs
	
	
	$gmvalidated = Gm_Constants::NO;
	$gmentryaccess = Gm_Constants::NO;
	$gmentryeditaccess = Gm_Constants::NO;
	$gmconfigurationaccess = Gm_Constants::NO;
	$gmtemplateaccess = Gm_Constants::NO;
	$gmauthoraccess = Gm_Constants::NO;
	$gmcplogaccess = Gm_Constants::NO;
	$gmrebuildaccess = Gm_Constants::NO;
	$gmbookmarkletaccess = Gm_Constants::NO;
	$gmuploadaccess = Gm_Constants::NO;
	$gmloginaccess = Gm_Constants::NO;

	my $selectedauthor = Gm_Security::auth( webparams=>\%IN, errHandler=>\&Gm_Web::displayAdminErrorExit );

	if ($selectedauthor->{'postnew'} eq Gm_Constants::Y ) { $gmentryaccess = Gm_Constants::YES; }
	if ($selectedauthor->{'editentries'} eq Gm_Constants::Y ) { $gmentryeditaccess = Gm_Constants::YES; }
	if ($selectedauthor->{'editentries'} eq 'O') { $gmentryeditaccess = 'mineonly'; }
	if ($selectedauthor->{'editconfigs'} eq Gm_Constants::Y ) { $gmconfigurationaccess = Gm_Constants::YES; }
	if ($selectedauthor->{'edittemplates'} eq Gm_Constants::Y ) { $gmtemplateaccess = Gm_Constants::YES; }
	if ($selectedauthor->{'edittemplates'} eq 'O') { $gmtemplateaccess = 'hfsonly'; }
	if ($selectedauthor->{'editauthors'} eq Gm_Constants::Y ) { $gmauthoraccess = Gm_Constants::YES; }
	if ($selectedauthor->{'rebuild'} eq Gm_Constants::Y ) { $gmrebuildaccess = Gm_Constants::YES; }
	if ($selectedauthor->{'viewcplog'} eq Gm_Constants::Y ) { $gmcplogaccess = Gm_Constants::YES; }
	if ($selectedauthor->{'bookmarklets'} eq Gm_Constants::Y ) { $gmbookmarkletaccess = Gm_Constants::YES; }
	if ($selectedauthor->{'upload'} eq Gm_Constants::Y ) { $gmuploadaccess = Gm_Constants::YES; }
	if ($selectedauthor->{'viewadmin'} eq Gm_Constants::Y ) { $gmloginaccess = Gm_Constants::YES; }

	%AUTHOR = %{ $selectedauthor };

	return( $selectedauthor );
}

# --------------------------
# check if this IP is banned
# --------------------------
# DEPRECATED BY: Gm_Core::processBanCheck
sub gm_bancheck {

	Gm_Core::processBanCheck( ip=>$ENV{'REMOTE_ADDR'}, errHandler=>\&Gm_Web::displayAdminErrorExit, 
		action=>Gm_Core::text( Gm_Constants::ACCESS_ADMIN ) );
}

# ---------------
# write to cp log
# ---------------
## Write to Control Panel Log
# shorthand to write to the control panel log
# ARGS1 = message to write to control panel
# DEPRECATED: Gm_Core::writeToCplog()
sub gm_writetocplog {
	my $writetologtext = shift;
	Gm_Core::writeToCplog( $writetologtext, errHandler=>\&Gm_Web::displayAdminErrorExit );
}   


# -----------------------------
# danger will robinson, danger!
# -----------------------------
# DEPRECATED: Gm_Web::displayAdminErrorExit
sub gm_dangermouse {
	my $dangerwarning = shift(@_);
	Gm_Web::displayAdminErrorExit( $dangerwarning );
}

1;


# ------------------------
# front page - log options
# ------------------------
## DEPRECATED BY: frontPage in gm.cgi
sub gm_frontpage {

&gm_readconfig;

if (($cgilocalpath eq Gm_Constants::EMPTY) || ($cgiwebpath eq Gm_Constants::EMPTY) || ($LogPath eq Gm_Constants::EMPTY) || ($EntriesPath eq Gm_Constants::EMPTY) || ($LogWebPath eq Gm_Constants::EMPTY) || ($EntriesWebPath eq Gm_Constants::EMPTY)) {

	if (($cgilocalpath eq Gm_Constants::EMPTY) && ($LogPath ne Gm_Constants::EMPTY)) { $cgilocalpath = $LogPath; }
	if (($cgiwebpath eq Gm_Constants::EMPTY) && ($LogWebPath ne Gm_Constants::EMPTY)) { $cgiwebpath = $LogWebPath; }

	if ($cgilocalpath eq Gm_Constants::EMPTY) {
		if ($ENV{'SCRIPT_FILENAME'}) { $cgilocalpath = $ENV{'SCRIPT_FILENAME'}; }
		elsif ($ENV{'PATH_TRANSLATED'}) {
			$cgilocalpath = $ENV{'PATH_TRANSLATED'};
			$cgilocalpath =~ s/\\/\//g; 
		}
		@cgilocalpathtemp = split(/\//, $cgilocalpath);
		pop(@cgilocalpathtemp);
		$cgilocalpath = join("\/", @cgilocalpathtemp);
		# added 1.3.1 - 1/20/05 flipped cracker
		$loglocalpath = $cgilocalpath;
		$loglocalpath =~ s/\/cgi-bin//g;
		# end additions
	}

	@cgipath = split(/\//, $cgilocalpath);
	$cgiwebpathextension = pop(@cgipath);
	# added 1.3.1 - 1/20/05 flipped cracker
	@logpath = split(/\//, $loglocalpath);
	$logwebpathextension = pop(@logpath);
	if ($logwebpathextension eq "public_html") { $logwebpathextensionnew = Gm_Constants::EMPTY; }
	 else { 
	   $logwebpathextensionnew = "/";
	   $logwebpathextensionnew .= $logwebpathextension;
	 }
	# end additions

	if ($cgiwebpath eq Gm_Constants::EMPTY) { $cgiwebpath = "http://$ENV{'HTTP_HOST'}/$cgiwebpathextension"; }

	if ($LogPath eq Gm_Constants::EMPTY) { $LogPath = $loglocalpath; }
	if ($EntriesPath eq Gm_Constants::EMPTY) { $EntriesPath = ("$loglocalpath" . "/archives"); }
	if ($LogWebPath eq Gm_Constants::EMPTY) { $LogWebPath = "http://$ENV{'HTTP_HOST'}$logwebpathextensionnew"; }
	if ($EntriesWebPath eq Gm_Constants::EMPTY) { $EntriesWebPath = "http://$ENV{'HTTP_HOST'}$logwebpathextensionnew/archives"; }

	&gm_writeconfig;

}

&gm_validate;

if ($gmloginaccess ne Gm_Constants::YES) {
	gm_writetocplog("$IN{'authorname'} attempted to log in without authorization");
	$loginnotice = qq(<B><FONT COLOR="#FF0000">You don't have access to log in.</FONT></B><P>);
	&gm_login;
}

if ($statusnote eq Gm_Constants::EMPTY) { $statusnote = qq(<B><FONT COLOR="#000000">Main Menu</FONT></B><P>); }

if (($IN{'authorname'} eq "Alice") && ($IN{'authorpassword'} eq "wonderland")) {
	$setnameandpwcookie = Gm_Constants::EMPTY;
} else {
	$setnameandpwcookie = "<SCRIPT TYPE=\"text/javascript\" LANGUAGE=\"JavaScript\">\n<!--//\nvar now = new Date();\nfixDate(now);\nnow.setTime(now.getTime() + 365 * 24 * 60 * 60 * 1000);\nsetCookie(\"gmcookiename\", \"$IN{'authorname'}\", now);\nsetCookie(\"$cookiename\", \"$IN{'authorpassword'}\", now);\n//-->\n</SCRIPT>";
}

if ($cookiesallowed eq Gm_Constants::NO) {
	$setnameandpwcookie = Gm_Constants::EMPTY;
}

$visityoursitelink = Gm_Constants::EMPTY;

# THIS SHOULD BE LINK THAT LOOKS LIKE BUTTON, SEE MULTIEDIT
# unless (!(open(CHECKMATE,"<$LogPath/$indexfilename"))) {
unless (! -e "$LogPath/$indexfilename"  ){
	&gm_readcounter;
	unless ($newentrynumber eq "0") {
		$indexfilenamesmartcheck = "/$indexfilename";
		$indexfilenameprefix = substr($indexfilename, 0, 6);
		if ($indexfilenameprefix eq "index.") { $indexfilenamesmartcheck = "/"; }
		$visityoursitelink = qq(<FORM ACTION="$LogWebPath$indexfilenamesmartcheck" TARGET="NEW">\n<TR><TD VALIGN=TOP ALIGN=CENTER COLSPAN=2>$gmfonttag<FONT SIZE=1><INPUT TYPE=SUBMIT CLASS="button" VALUE="Visit Your Site" STYLE="background: #D0FFD0; width: 500"><BR>Open your weblog/journal in a new browser window.</FONT></FONT></TD></TR>\n</FORM>);
	}
}
# close(CHECKMATE);

## TODO THIS SHOULD UTILIZE A PRINT_ADMIN_SCREEN TYPE FUNCTION
print Gm_Web::createRequestHeader();
print<<GMFRONTPAGE;

$gmheadtag

$gmframetop
$statusnote
$setnameandpwcookie

<TABLE BORDER=0 CELLPADDING=10 CELLSPACING=0 WIDTH=520>
<TR><TD VALIGN=TOP ALIGN=CENTER COLSPAN=2>
<FORM ACTION="gm.cgi" METHOD=POST>
<INPUT TYPE=HIDDEN NAME="authorname" VALUE="$IN{'authorname'}">
<INPUT TYPE=HIDDEN NAME="authorpassword" VALUE="$IN{'authorpassword'}">
$gmfonttag<FONT SIZE=1>
<INPUT type="hidden" name="section" value="entries">
<INPUT TYPE=SUBMIT CLASS="button" NAME="new" VALUE="Add A New Entry" STYLE="background: #D0FFD0; width: 500">
</form>
<BR>Post a new entry to your weblog/journal.</FONT></FONT></TD></TR>

<TR><TD VALIGN=TOP ALIGN=CENTER WIDTH=50%>$gmfonttag
<FONT SIZE=1>
<FORM ACTION="gm.cgi" METHOD=POST>
<INPUT TYPE=HIDDEN NAME="authorname" VALUE="$IN{'authorname'}">
<INPUT TYPE=HIDDEN NAME="authorpassword" VALUE="$IN{'authorpassword'}">
<INPUT TYPE=SUBMIT CLASS="button" NAME="configs" VALUE="Configuration"><BR>
Your site's settings and options.</FONT></FONT></TD>
<TD VALIGN=TOP ALIGN=CENTER WIDTH=50%>$gmfonttag<FONT SIZE=1>
<INPUT TYPE=SUBMIT CLASS="button" NAME="entries" VALUE="Edit An Entry"><BR>
Edit entries and edit/delete comments.</FONT></FONT></TD></TR>

<TR><TD VALIGN=TOP ALIGN=CENTER WIDTH=50%>$gmfonttag
<FONT SIZE=1><INPUT TYPE=SUBMIT CLASS="button" NAME="templates" VALUE="Edit Templates"><BR>
Change your site's layout and appearance.</FONT></FONT></TD>
<TD VALIGN=TOP ALIGN=CENTER WIDTH=50%>$gmfonttag<FONT SIZE=1>
<INPUT TYPE=SUBMIT CLASS="button" NAME="authors" VALUE="Edit Authors"><BR>
Edit or add authors to post to your site.</FONT></FONT></TD></TR>

<TR><TD VALIGN=TOP ALIGN=CENTER WIDTH=50%>$gmfonttag<FONT SIZE=1>
<INPUT TYPE=SUBMIT CLASS="button" NAME="rebuild" VALUE="Rebuild Files"><BR>
Regenerate part or all of your site.</FONT></FONT></TD>
<TD VALIGN=TOP ALIGN=CENTER WIDTH=50%>$gmfonttag<FONT SIZE=1>
<INPUT TYPE=SUBMIT CLASS="button" NAME="cplog" VALUE="View Control Panel Log"><BR>
A record of how your site's been used.</FONT></FONT></TD></TR>

<TR><TD VALIGN=TOP ALIGN=CENTER WIDTH=50%>$gmfonttag<FONT SIZE=1>
<INPUT TYPE=SUBMIT CLASS="button" NAME="bookmarklet" VALUE="Add Bookmarklets"><BR>
Post entries with one click.</FONT></FONT></TD>
<TD VALIGN=TOP ALIGN=CENTER WIDTH=50%>$gmfonttag<FONT SIZE=1>
<INPUT TYPE=SUBMIT CLASS="button" NAME="upload" VALUE="Upload Files"><BR>
Upload images or other files to your site.</FONT></FONT></TD></TR>

<TR><TD VALIGN=TOP ALIGN=CENTER WIDTH=50%>$gmfonttag<FONT SIZE=1>
<INPUT TYPE=SUBMIT CLASS="button" NAME="banip" VALUE="Edit Banned IP List"><BR>
Ban someone from using your site.</FONT></FONT></TD>
<TD VALIGN=TOP ALIGN=CENTER WIDTH=50%>$gmfonttag<FONT SIZE=1>
<INPUT TYPE=SUBMIT CLASS="button" NAME="relogin" VALUE="Re-Login"><BR>
Re-enter as another author.</FONT></FONT></TD></TR>

</FORM>

$visityoursitelink

</TABLE>
<P>
$gmframebottom

</BODY>
</HTML>

GMFRONTPAGE

$statusnote = Gm_Constants::EMPTY;

exit;

}

# ----------------
# templates editor
# ----------------
# DEPRECATED BY: viewTemplates in gm.cgi
sub gm_edittemplates {
	die( "gm_edittemplates has been DEPRECATED");
}

# -------------------------------
# edit template group: main index
# -------------------------------
# DEPRECATED BY: viewTemplates in gm.cgi
sub gm_editmainindextemplates {
	die( "gm_editmainindextemplates has been DEPRECATED");
}

# -----------------------------
# edit template group: archives
# -----------------------------
# DEPRECATED BY: viewTemplates in gm.cgi
sub gm_editarchivetemplates {
	die( "gm_editarchivetemplates has been DEPRECATED");
}

# --------------------------------
# edit template group: entry pages
# --------------------------------
# DEPRECATED BY: viewTemplates in gm.cgi
sub gm_editentrypagetemplates {
	die( "gm_editentrypagetemplates has been DEPRECATED");
}

# -------------------------------------
# edit template group: karma & comments
# -------------------------------------
# DEPRECATED BY: viewTemplates in gm.cgi
sub gm_editkarmacommentstemplates {
	die( "gm_editkarmacommentstemplates has been DEPRECATED");
}

# ---------------------------------------------
# edit template group: header, footer & sidebar
# ---------------------------------------------
# DEPRECATED BY: viewTemplates in gm.cgi
sub gm_editheaderfootertemplates {
	die( "gm_editheaderfootertemplates has been DEPRECATED");
}

# ----------------------------------
# edit template group: miscellaneous
# ----------------------------------
# DEPRECATED BY: viewTemplates in gm.cgi
sub gm_editmisctemplates {
	die( "gm_editmisctemplates has been DEPRECATED");
}

# -------------------------
# save the template changes
# -------------------------
# DEPRECATED BY: updateTemplates in gm.cgi
sub gm_savetemplatechanges {
	die( "gm_savetemplatechanges has been DEPRECATED");
}

# --------------
# authors editor
# --------------
# DEPRECATED by viewAuthorList in gm.cgi
sub gm_editauthors {
	die( "gm_editauthors has been DEPRECATED");
}

# -------------------
# create a new author
# -------------------
# DEPRECATED by addAuthors in gm.cgi
sub gm_createnewauthor {
	die( "gm_createnewauthor has been DEPRECATED");
}

# ----------------
# delete an author
# ----------------
## depecated by deleteAuthor in gm.cgi
sub gm_deleteselectedauthor {
	die( "gm_deleteselectedauthor has been DEPRECATED");
}

# -----------------
# editing an author
# -----------------
# deprecated by gm.cgi: viewAuthor
sub gm_editselectedauthor {
	die( "gm_editselectedauthor has been DEPRECATED");
}

# -------------------------
# save changes to an author
# -------------------------
## DEPRECATED BY updateAuthor in gm.cgi
sub gm_saveauthorchanges {
	die( "gm_saveauthorchanges has been DEPRECATED");
}

# ------------------
# configuration menu
# ------------------
# html used for noting with something is update: "<B><FONT COLOR="#00FF00">Updated</FONT></B> "
## DEPRECATED BY viewConfigs in gm.cgi
sub gm_configuration {
	die( "gm_configuration has been DEPRECATED");
}

# ----------------
# save config file
# ----------------
# DEPRECATED BY: _saveConfigs in gm.cgi
sub gm_saveconfiguration {
	die( "gm_saveconfiguration has been DEPRECATED");
}

# -------------------
# edit banned ip list
# -------------------
## DEPRECATED BY: viewBanList in gm.cgi
sub gm_editbanlist {
	die( "gm_editbanlist has been DEPRECATED");
}

# -------------------------
# add an ip to the ban list
# -------------------------
## DEPRECATED BY: addBannedIp in gm.cgi
sub gm_addbannedip {
	die( "gm_addbannedip has been DEPRECATED");
}

# ------------------------------
# delete an ip from the ban list
# ------------------------------
## DEPRECATED BY: deleteBannedIp in gm.cgi
sub gm_deletebannedip {
	die( "gm_deletebannedip has been DEPRECATED");
}

# ---------------
# add a new entry
# ---------------
## DEPRECATED BY: newEntry in gm.cgi
sub gm_addentry {
	die( "gm_addentry has been DEPRECATED");
}

# -------------------------------
# add a new entry - popup version
# -------------------------------
# DEPRECATED BY: newEntry in gm.cgi
sub gm_addentrypopup {
	die( "gm_addentrypopup has been DEPRECATED");
}

# ----------------------------
# preview entry before posting
# ----------------------------
## DEPRECATED BY: viewPreview in gm.cgi
sub gm_previewentry {
	die( "gm_previewentry has been DEPRECATED");
}

# ------------------
# save the new entry
# ------------------

sub gm_savenewentry {
	die( "gm_savenewentry has been DEPRECATED");
}

# ------------------
# rebuild files menu
# ------------------
# DEPRECATED BY: viewRebuild in gm.cgi
sub gm_rebuildfilesmenu {
	die( "gm_rebuildfilesmenu has been DEPRECATED");
}

# ---------------------------
# rebuild the main index file
# ---------------------------
# DEPRECATED BY: rebuildMainIndex in gm.cgi
sub gm_rebuildmainindexfile {
	die( "gm_rebuildmainindexfile has been DEPRECATED");
}

# ----------------------------
# rebuild last entry page only
# ----------------------------
# DEPRECATED BY: rebuildLastEntry in gm.cgi
sub gm_rebuildlastentrypageonly {
	die( "gm_rebuildlastentrypageonly has been DEPRECATED");
}

# ------------------------
# rebuild main entry files
# ------------------------
# DEPRECATED BY: rebuildEntryPages in gm.cgi
sub gm_rebuildmainentrypages {
	die( "gm_rebuildmainentrypages has been DEPRECATED");
}

# ----------------------------
# rebuild archive master index
# ----------------------------
# DEPRECATED BY: rebuildArchiveIndex in gm.cgi
sub gm_rebuildarchivemasterindex {
	die( "gm_rebuildarchivemasterindex has been DEPRECATED");
}

# ---------------------------
# rebuild archive log indexes
# ---------------------------
# DEPRECATED BY: rebuildArchiveLogs in gm.cgi
sub gm_rebuildarchivelogindexes {
	die( "gm_rebuildarchivelogindexes has been DEPRECATED");
}

# ---------------------------
# rebuild archive entry pages
# ---------------------------
# DEPRECATED BY: rebuildArchiveEntries in gm.cgi
sub gm_rebuildarchiveentrypages {
	die( "gm_rebuildarchiveentrypages has been DEPRECATED");
}

# -----------------------
# rebuild all entry pages
# -----------------------
# DEPRECATED BY: rebuildAllEntries in gm.cgi
sub gm_rebuildallentrypages {
	die( "gm_rebuildallentrypages has been DEPRECATED");
}
# DEPRECATED BY: rebuildConnected in gm.cgi
# -------------------------------
# rebuild connected files - check
# -------------------------------

sub gm_rebuildconnectedfilescheck {
	die( "gm_rebuildconnectedfilescheck has been DEPRECATED");
}

# ------------------
# rebuild everything
# ------------------
# DEPRECATED BY: rebuildEverything in gm.cgi
sub gm_rebuildeverything {
	die( "gm_rebuildeverything has been DEPRECATED");
}

# ------------------------------
# edit an entry - selection menu
# ------------------------------
# DEPRECATED BY: viewEntryList in gm.cgi
sub gm_editentryselection {
	die( "gm_editentryselection has been DEPRECATED");
}

# ------------------------------------
# editing entries - search and replace
# ------------------------------------
## DEPRECATED BY: viewSearchAndReplace in gm.cgi
sub gm_editentrysearchandreplace {
	die( "gm_editentrysearchandreplace has been DEPRECATED");
}

# --------------------------
# perform search and replace
# --------------------------
## TODO: THIS SHOULD DO A REBUILD ONCE ITS DONE, HAVE TO MANUALLY REBUILD
## DEPRECATED BY: entrySearchAndReplace in gm.cgi
sub gm_performsearchandreplace {
	die( "gm_performsearchandreplace has been DEPRECATED");
}

# -----------------------------------
# edit an entry - main editing screen
# -----------------------------------
# TODO: REFACTOR THIS, ADD NEW, AND ADD POPUP INTO ONE
## DEPRECATED BY: viewEntry in gm.cgi
sub gm_editthisentry {
	die( "gm_editthisentry has been DEPRECATED");
}

# ----------------------------
# save changes to edited entry
# ----------------------------
# DEPRECATED BY: editEntry in gm.cgi
sub gm_saveentrychanges {
 	die( "gm_saveentrychanges has been DEPRECATED");
}

# ------------------------
# change entry open status
# ------------------------
# DEPRECATED BY: changeEntryStatus in gm.cgi
sub gm_changeentryopenstatus {
	die( "gm_changeentryopenstatus has been DEPRECATED");
}

# -----------------------
# delete selected comment
# -----------------------
# DEPRECATED BY: deleteEntryComments in gm.cgi
sub gm_deleteselectedcomment {
	die( "gm_deleteselectedcomment has been DEPRECATED");
}

# -----------------------
# delete all selected comments
# -----------------------
# DEPRECATED BY: deleteEntryComments in gm.cgi
sub gm_DeleteAllSelectedComments {
	die( "gm_DeleteAllSelectedComments has been DEPRECATED");
}

# ---------------------
# edit selected comment
# ---------------------
# DEPRECATED BY: viewEntryComment in gm.cgi
sub gm_editselectedcomment {
	die( "gm_editselectedcomment has been DEPRECATED");
}

# --------------------
# save comment changes
# --------------------
# DEPRECATED BY: updateEntryComment in gm.cgi
sub gm_savecommentchanges {
	die( "gm_savecommentchanges has been DEPRECATED");
}

# ------------------------
# save config file for D&R
# ------------------------
# DEPRECATED BY: _saveConfigs in gm.cgi
sub gm_saveconfigurationdr {
	die( "gm_saveconfigurationdr has been DEPRECATED");
}

# ----------------------------
# diagnostics & repair - check
# ----------------------------
# DEPRECATED BY: viewDiagRepair in gm.cgi
sub gm_diagnosticscheck {
	die( "gm_diagnosticscheck has been DEPRECATED");
}

# ------------------------------
# diagnostics & repair - perform
# ------------------------------
# DEPRECATED BY: doDiagRepair in gm.cgi
sub gm_diagnosticsperform {
	die( "gm_diagnosticsperform has been DEPRECATED");
}

# ----------------
# add bookmarklets
# ----------------
# DEPRECATED BY: viewBookmarklet in gm.cgi
sub gm_addbookmarklets {
 	die( "gm_addbookmarklets has been DEPRECATED");
}

# ------------
# upload files
# ------------
# DEPRECATED BY: viewUploads in gm.cgi 
sub gm_uploadfiles {
 	die( "gm_uploadfiles has been DEPRECATED");
}

# ----------------
# version checking
# ----------------
## Move this to Gm_Upgrade
sub gm_versioncheck {
&gm_readconfig;

if ($versionsetup ne $gmversion) {
println( Gm_Web::createRequestHeader() );
print<<GMVERSIONCHECKTOP;

$gmheadtag
$gmframetop

GMVERSIONCHECKTOP
## TODO: REFACTOR THIS, IT MUST BE UPDATED WITH EVERY RELEASE, WAY TO FIX?
## YES STORE VERSIONS IN CONSTANTS ARRAY, COMPARE TO THAT, FIX WHEN 
if ($versionsetup eq 'one point zero') {
	print qq(Greymatter has detected that you are upgrading from version 1.0.  Some of your files will need to be updated now.  After Greymatter is done updating, you might want to review your configuration and customize the templates; many new templates are included which could affect your site.<P><B>Important notes:</B> If you have an index page in your archives directory, Greymatter will, by default, overwrite it with its new archive index, so you may want to <B>make a backup of that file</B> first; you'll also need to make sure that file is CHMODed to 666, or simply delete that file instead.  There is also a new gm-upload.cgi file that you'll have to upload with your other Greymatter CGI files and CHMOD to 755, if you haven't already.<P><FORM ACTION="gm.cgi" METHOD=POST><INPUT TYPE=HIDDEN NAME="authorname" VALUE="$IN{'authorname'}"><INPUT TYPE=HIDDEN NAME="authorpassword" VALUE="$IN{'authorpassword'}"><INPUT TYPE=HIDDEN NAME="oldsetupversion" VALUE="$versionsetup"><INPUT TYPE=SUBMIT CLASS="button" NAME="thomas" STYLE="background: #D0FFD0" VALUE="Update Now"></FORM><P>);
} elsif ($versionsetup eq '1.1') {
	print qq(Greymatter has detected that you are upgrading from version 1.1.  Some of your files will need to be updated now.  After Greymatter is done updating, you might want to review the new configuration and template options; it's also <I>strongly recommended</I> that you "Rebuild Everything" right after it finishes updating.  Finally, be sure to upload the new gm-upload.cgi with your other Greymatter CGI files and CHMOD it to 755, if you haven't already.<P><FORM ACTION="gm.cgi" METHOD=POST><INPUT TYPE=HIDDEN NAME="authorname" VALUE="$IN{'authorname'}"><INPUT TYPE=HIDDEN NAME="authorpassword" VALUE="$IN{'authorpassword'}"><INPUT TYPE=HIDDEN NAME="oldsetupversion" VALUE="$versionsetup"><INPUT TYPE=SUBMIT CLASS="button" NAME="thomas" STYLE="background: #D0FFD0" VALUE="Update Now"></FORM><P>);
} elsif ($versionsetup eq '1.2' || $versionsetup eq '1.21' || 
		$versionsetup eq '1.21a' || $versionsetup eq '1.21b' || $versionsetup eq '1.21c' || 
		$versionsetup eq '1.21d' || $versionsetup eq '1.21e' || $versionsetup eq '1.3' || 
		$versionsetup eq '1.3a' || $versionsetup eq '1.3.1' || $versionsetup eq '1.6.1' || 
		$versionsetup eq '1.7.1' || $versionsetup eq '1.7.2' || $versionsetup eq '1.7.3' || 
		$versionsetup eq '1.7.4' || $versionsetup eq '1.8.1' ){
	_printVersionMessage( $versionsetup, $gmversion );
} else {
	## We might actually be dealing with old template format, lets read them again ...
	_old_gm_readconfig();
	if ($versionsetup eq 'one point zero') {
		print qq(Greymatter has detected that you are upgrading from version 1.0.  Some of your files will need to be updated now.  After Greymatter is done updating, you might want to review your configuration and customize the templates; many new templates are included which could affect your site.<P><B>Important notes:</B> If you have an index page in your archives directory, Greymatter will, by default, overwrite it with its new archive index, so you may want to <B>make a backup of that file</B> first; you'll also need to make sure that file is CHMODed to 666, or simply delete that file instead.  There is also a new gm-upload.cgi file that you'll have to upload with your other Greymatter CGI files and CHMOD to 755, if you haven't already.<P><FORM ACTION="gm.cgi" METHOD=POST><INPUT TYPE=HIDDEN NAME="authorname" VALUE="$IN{'authorname'}"><INPUT TYPE=HIDDEN NAME="authorpassword" VALUE="$IN{'authorpassword'}"><INPUT TYPE=HIDDEN NAME="oldsetupversion" VALUE="$versionsetup"><INPUT TYPE=SUBMIT CLASS="button" NAME="thomas" STYLE="background: #D0FFD0" VALUE="Update Now"></FORM><P>);
	} elsif ($versionsetup eq '1.1') {
		print qq(Greymatter has detected that you are upgrading from version 1.1.  Some of your files will need to be updated now.  After Greymatter is done updating, you might want to review the new configuration and template options; it's also <I>strongly recommended</I> that you "Rebuild Everything" right after it finishes updating.  Finally, be sure to upload the new gm-upload.cgi with your other Greymatter CGI files and CHMOD it to 755, if you haven't already.<P><FORM ACTION="gm.cgi" METHOD=POST><INPUT TYPE=HIDDEN NAME="authorname" VALUE="$IN{'authorname'}"><INPUT TYPE=HIDDEN NAME="authorpassword" VALUE="$IN{'authorpassword'}"><INPUT TYPE=HIDDEN NAME="oldsetupversion" VALUE="$versionsetup"><INPUT TYPE=SUBMIT CLASS="button" NAME="thomas" STYLE="background: #D0FFD0" VALUE="Update Now"></FORM><P>);
	} elsif ($versionsetup eq '1.2' || $versionsetup eq '1.21' || 
			$versionsetup eq '1.21a' || $versionsetup eq '1.21b' || $versionsetup eq '1.21c' || 
			$versionsetup eq '1.21d' || $versionsetup eq '1.21e' || $versionsetup eq '1.3' || 
			$versionsetup eq '1.3a' || $versionsetup eq '1.3.1' || $versionsetup eq '1.6.1' || 
			$versionsetup eq '1.7.1' || $versionsetup eq '1.7.2'|| $versionsetup eq '1.7.3' || 
			$versionsetup eq '1.7.4' || $versionsetup eq '1.8.1' ){
		_printVersionMessage( $versionsetup, $gmversion );
	} else {
		print qq(<B>ERROR:</B> Greymatter could not determine the version setup.  Please make sure that Greymatter is installed correctly.  Try reuploading the gm-config.cgi file that came with Greymatter and try logging in again; you'll need to reconfigure your Configuration settings.);
	}
}

print<<GMVERSIONCHECKBOTTOM;

$gmframebottom

</BODY>
</HTML>

GMVERSIONCHECKBOTTOM

exit;

}

}

## NOTE: that this is preventing us switching to session id for auth credentials
## Move this to web
# here is outline for new logic
# A subroutine in gm.cgi calls Gm_Upgrade::needUpgrade();
# if yes, prints out the message below, or rather, a list of implemented features returned by needUpgrade()
# if no, procede as normal
sub _printVersionMessage {
  my ($versionsetup, $newversion) = @_;
  
  gm_validate();  ## great, calling to setup global variable
  
	println('Greymatter has detected that you are upgrading from version '.$versionsetup.'.<br />  '.
	'Version '.$newversion.' has extensive reworking of application code, bug fixes, security enhancements, and more.'.
	'<P><FORM ACTION="gm.cgi" METHOD=POST>'.
	'<INPUT TYPE=HIDDEN NAME="authorname" VALUE="'.$AUTHOR{'author'}.'">'.
	'<INPUT TYPE=HIDDEN NAME="authorpassword" VALUE="'.$AUTHOR{'password'}.'">'.
	'<INPUT TYPE=HIDDEN NAME="oldsetupversion" VALUE="'.$versionsetup.'">'.
	'<INPUT TYPE=SUBMIT CLASS="button" NAME="thomas" STYLE="background: #D0FFD0" '.
	'VALUE="Update Now"></FORM><P>');
}


# DEPRECATED BY: Gm_Core::hasDiagRun
sub _checkIfDiagRun {
 	die( "_checkIfDiagRun has been DEPRECATED");
}

# -----------------
# version upgrading
##  TODO:  ADDRESS THIS ISSUE
# ISSUE: this is legacy code, it is not worth the time and effort to refactor as it is 
#  very crusty.  Unfortunatly the solution will be tell users to upgrade to the last
# version whitch contains this bit of file.  Then to move forward from there.
#
#  It sucks, we all know it, but every app has this.
# -----------------
sub gm_versionupgrading {

print Gm_Web::createRequestHeader();

## Check if the config version is blank, this indicates a probably config file format change
## Use read old templates and read old configs and read old counters where approp.

if ($IN{'oldsetupversion'} eq "one point zero") {
	open (FUNNYFEET, "<gm-entrylist.cgi") || &gm_dangermouse("Can't read the entrylist file.  Please make sure that gm-entrylist.cgi is CHMODed to 666 and is in the same place as all your other Greymatter CGI files.");
	@tempnewentrylist = <FUNNYFEET>;
	close (FUNNYFEET);
	open (FUNNYFEETWO, ">gm-entrylist.cgi") || &gm_dangermouse("Can't write to the entrylist file.  Please make sure that gm-entrylist.cgi is CHMODed to 666 and is in the same place as all your other Greymatter CGI files.");
	foreach $tempnewentrylistline (@tempnewentrylist) {
		chomp ($tempnewentrylistline);
		($templistnumber, $templistauthorname, $templistsubject, $templistdate, $templisttime, $templistopenstatus) = split (/\|/, $tempnewentrylistline);
		$templistopenstatus = 'O';
		if ($templistopenstatus eq Gm_Constants::CLOSED) { $templistopenstatus = 'C'; }
		$templistmorestatus = Gm_Constants::N;
# 		&gm_getentryvariables($templistnumber);
		$entryVars = Gm_Core::getEntryVariables( entryid=>$templistnumber, 
			errHandler=>\&Gm_Web::displayAdminErrorExit );
		if ($entryVars->{'thisentrymorebody'} ne Gm_Constants::EMPTY) { $templistmorestatus = Gm_Constants::Y; }
		print FUNNYFEETWO "$templistnumber|$templistauthorname|$templistsubject|$templistdate|$templisttime|$templistopenstatus|$templistmorestatus\n";
	}
	close (FUNNYFEETWO);
	_old_gm_readtemplates();
	$gmentrytemplate =~ s/\n/\|\*\|/g;
	$gmentrypagetemplate =~ s/\n/\|\*\|/g;
	$gmarchiveentrypagetemplate =~ s/\n/\|\*\|/g;
	$gmarchiveentrytemplate =~ s/\n/\|\*\|/g;
	$gmdatetemplate =~ s/\n/\|\*\|/g;

	open (FUNNYFEETHREE, ">>gm-templates.cgi");
	print FUNNYFEETHREE "$gmentrytemplate\n";
	print FUNNYFEETHREE "$gmentrypagetemplate\n";
	print FUNNYFEETHREE "$gmarchiveentrypagetemplate\n";
	print FUNNYFEETHREE qq([{{pagepreviouslink}}Previous entry: "{{previousentrysubject}}"</A>]\n);
	print FUNNYFEETHREE qq([{{pagenextlink}}Next entry: "{{nextentrysubject}}"</A>]\n);
	print FUNNYFEETHREE qq([{{pagemorepreviouslink}}Previous extended entry: "{{previousmoreentrysubject}}"</A>]\n);
	print FUNNYFEETHREE qq([{{pagemorenextlink}}Next extended entry: "{{nextmoreentrysubject}}"</A>]\n);
	print FUNNYFEETHREE qq(<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">|*|<HTML>|*|<HEAD>|*|<TITLE>My Archives</TITLE>|*|<META NAME="Generator" CONTENT="Greymatter 1.1">|*|</HEAD>|*||*|<BODY BGCOLOR="#FFFFFF">|*||*|<P ALIGN=CENTER>|*|{{header}}|*|</P><P ALIGN=CENTER>|*|<FONT SIZE=4><B>My Archives</B></FONT>|*|</P>|*||*|<P ALIGN=CENTER>|*|<B>Log Archives</B>|*|</P><P ALIGN=CENTER>|*|{{logarchivelist}}|*|</P><P ALIGN=CENTER>|*|<B>Entries</B>|*|</P><P ALIGN=CENTER>|*|{{logentrylist}}|*|</P>|*||*|<P ALIGN=CENTER>|*|[{{pageindexlink}}Main Index</A>]|*|</P><P ALIGN=CENTER>|*|{{gmicon}}|*|</P><P ALIGN=CENTER>|*|{{footer}}|*|</P>|*||*|</BODY>|*|</HTML>\n);
	print FUNNYFEETHREE qq({{pagearchivelogindexlink}}Log Archives: {{monthword}} {{yearyear}}</A>\n);
	print FUNNYFEETHREE qq({{pagelink}}{{monthmonth}}/{{dayday}}/{{yearyear}}: {{entrysubject}}</A>\n);
	print FUNNYFEETHREE qq(<B>{{pagelink}}{{monthmonth}}/{{dayday}}/{{yearyear}}: {{entrysubject}}</A></B>\n);
	print FUNNYFEETHREE qq( / \n);
	print FUNNYFEETHREE qq(<BR>\n);
	print FUNNYFEETHREE "<P>\n";
	print FUNNYFEETHREE "<br />\n";
	print FUNNYFEETHREE "<P>\n";
	print FUNNYFEETHREE "\n";
	print FUNNYFEETHREE "\n";
	print FUNNYFEETHREE "\n";
	print FUNNYFEETHREE qq( onMouseOver="window.status='{{monthmonth}}/{{dayday}}/{{yearyear}}: {{entrysubject}}';return true" onMouseOut="window.status='';return true"\n);
	print FUNNYFEETHREE "\n";
	print FUNNYFEETHREE "\n";
	print FUNNYFEETHREE "$gmarchiveentrytemplate\n";
	print FUNNYFEETHREE "$gmdatetemplate\n";
	close (FUNNYFEETHREE);
	open (FUNNYFEETFOUR, ">>gm-config.cgi");
	print FUNNYFEETFOUR "yes\n";
	print FUNNYFEETFOUR "ascending\n";
	print FUNNYFEETFOUR "both\n";
	print FUNNYFEETFOUR "10\n";
	close (FUNNYFEETFOUR);
	_old_gm_readconfig();
	$versionsetup = $gmversion;
	_old_gm_writeconfig();
}

if (($IN{'oldsetupversion'} eq "one point zero") || ($IN{'oldsetupversion'} eq "1.1")) {
	_old_gm_readtemplates();
	open (LAUGHINGFEET, "<gm-templates.cgi") || &gm_dangermouse("Can't read the templates file.  Please make sure that gm-templates.cgi is CHMODed to 666 and is in the same place as all your other Greymatter CGI files.");
	@gmtemplateline = <LAUGHINGFEET>;
	close (LAUGHINGFEET);
	
	open (LAUGHINGFEETONE, ">gm-templates.cgi") || &gm_dangermouse("Can't write to the templates file.  Please make sure that gm-templates.cgi is CHMODed to 666 and is in the same place as all your other Greymatter CGI files.");
	foreach $thistemplateline (@gmtemplateline) {
		chomp ($thistemplateline);
		unless ($thistemplateline eq Gm_Constants::EMPTY) {
			$authoremaillinkreplacement = qq(<A HREF="mailto:{{authoremail}}">);
			$authorhomepagelinkreplacement = qq(<A HREF="mailto:{{authorhomepage}}">);
			$commentauthoremaillinkreplacement = qq(<A HREF="mailto:{{commentauthoremailabsolute}}">);
			$commentauthorhomepagelinkreplacement = qq(<A HREF="mailto:{{commentauthorhomepageabsolute}}">);
			$commentspostlinkreplacement = qq(<A HREF="{{commentspostlink}}">);
			$pagelinkreplacement = qq(<A HREF="{{pagelink}}">);
			$pageindexlinkreplacement = qq(<A HREF="{{pageindexlink}}">);
			$pagearchiveindexlinkreplacement = qq(<A HREF="{{pagearchiveindexlink}}">);
			$pagearchivelogindexlinkreplacement = qq(<A HREF="{{pagearchivelogindexlink}}">);
			$pagenextlinkreplacement = qq(<A HREF="{{nextpagelink}}" onMouseOver="window.status='{{nextmonthmonth}}/{{nextdayday}}/{{nextyear}}: {{nextentrysubject}}';return true" onMouseOut="window.status='';return true">);
			$pagenextmorelinkreplacement = qq(<A HREF="{{nextmorepagelink}}" onMouseOver="window.status='{{nextmoremonthmonth}}/{{nextmoredayday}}/{{nextmoreyear}}: {{nextmoreentrysubject}}';return true" onMouseOut="window.status='';return true">);
			$pagepreviouslinkreplacement = qq(<A HREF="{{previouspagelink}}" onMouseOver="window.status='{{previousmonthmonth}}/{{previousdayday}}/{{previousyear}}: {{previousentrysubject}}';return true" onMouseOut="window.status='';return true">);
			$pagepreviousmorelinkreplacement = qq(<A HREF="{{previousmorepagelink}}" onMouseOver="window.status='{{previousmoremonthmonth}}/{{previousmoredayday}}/{{previousmoreyear}}: {{previousmoreentrysubject}}';return true" onMouseOut="window.status='';return true">);
			$pagesmartindexlinkreplacement = qq(<A HREF="{{pagesmartindexlink}}">);
			$pagepositivekarmalinkreplacement = qq(<A HREF="{{positivekarmalink}}" onMouseOver="window.status='Cast a positive vote on this entry';return true" onMouseOut="window.status='';return true">);
			$pagenegativekarmalinkreplacement = qq(<A HREF="{{negativekarmalink}}" onMouseOver="window.status='Cast a negative vote on this entry';return true" onMouseOut="window.status='';return true">);
			$thistemplateline =~ s/{{authoremaillink}}/$authoremaillinkreplacement/ig;
			$thistemplateline =~ s/{{authorhomepagelink}}/$authorhomepagelinkreplacement/ig;
			$thistemplateline =~ s/{{commentauthoremaillink}}/$commentauthoremaillinkreplacement/ig;
			$thistemplateline =~ s/{{commentauthorhomepagelink}}/$commentauthorhomepagelinkreplacement/ig;
			$thistemplateline =~ s/{{commentspostlink}}/$commentspostlinkreplacement/ig;
			$thistemplateline =~ s/{{pagelink}}/$pagelinkreplacement/ig;
			$thistemplateline =~ s/{{pageindexlink}}/$pageindexlinkreplacement/ig;
			$thistemplateline =~ s/{{pagearchiveindexlink}}/$pagearchiveindexlinkreplacement/ig;
			$thistemplateline =~ s/{{pagearchivelogindexlink}}/$pagearchivelogindexlinkreplacement/ig;
			$thistemplateline =~ s/{{pagenextlink}}/$pagenextlinkreplacement/ig;
			$thistemplateline =~ s/{{pagenextmorelink}}/$pagenextmorelinkreplacement/ig;
			$thistemplateline =~ s/{{pagepreviouslink}}/$pagepreviouslinkreplacement/ig;
			$thistemplateline =~ s/{{pagepreviousmorelink}}/$pagepreviousmorelinkreplacement/ig;
			$thistemplateline =~ s/{{pagemorepreviouslink}}/$pagepreviousmorelinkreplacement/ig;
			$thistemplateline =~ s/{{pagemorenextlink}}/$pagepreviousmorelinkreplacement/ig;
			$thistemplateline =~ s/{{pagesmartindexlink}}/$pagesmartindexlinkreplacement/ig;
			$thistemplateline =~ s/{{positivekarmalink}}/$pagepositivekarmalinkreplacement/ig;
			$thistemplateline =~ s/{{negativekarmalink}}/$pagenegativekarmalinkreplacement/ig;
		}
		print LAUGHINGFEETONE "$thistemplateline\n";
	}
	close (LAUGHINGFEETONE);
	&gm_readtemplates;
	$gmindextemplate = Gm_Utils::toStoreSafe($gmindextemplate);
	$gmentrypagetemplate = Gm_Utils::toStoreSafe($gmentrypagetemplate);
	$gmarchiveindextemplate = Gm_Utils::toStoreSafe($gmarchiveindextemplate);
	$gmarchiveentrypagetemplate = Gm_Utils::toStoreSafe($gmarchiveentrypagetemplate);
	$gmentrytemplate = Gm_Utils::toStoreSafe($gmentrytemplate);
	$gmarchiveentrytemplate = Gm_Utils::toStoreSafe($gmarchiveentrytemplate);
	$gmstayattoptemplate = Gm_Utils::toStoreSafe($gmstayattoptemplate);
	$gmdatetemplate = Gm_Utils::toStoreSafe($gmdatetemplate);
	$gmcommentstemplate = Gm_Utils::toStoreSafe($gmcommentstemplate);
	$gmcommentsformtemplate = Gm_Utils::toStoreSafe($gmcommentsformtemplate);
	$gmparaseparationtemplate = Gm_Utils::toStoreSafe($gmparaseparationtemplate);
	$gmkarmaformtemplate = Gm_Utils::toStoreSafe($gmkarmaformtemplate);
	# new templates {{target}} and dategrouping footer take the place of the long-deprecated ones: linear 9/18/2003
    	# new in 1.3
	$gmlinktargettemplate = Gm_Utils::toStoreSafe($gmlinktargettemplate);
	$gmdategroupingfootertemplate = Gm_Utils::toStoreSafe($gmdategroupingfootertemplate);
	# merged 9/18/2003
	$gmkarmalinktemplate = Gm_Utils::toStoreSafe($gmkarmalinktemplate);
	$gmcommentslinktemplate = Gm_Utils::toStoreSafe($gmcommentslinktemplate);
	$gmcommentauthoremailtemplate = Gm_Utils::toStoreSafe($gmcommentauthoremailtemplate);
	$gmcommentauthorhomepagetemplate = Gm_Utils::toStoreSafe($gmcommentauthorhomepagetemplate);
	$gmcommentdividertemplate = Gm_Utils::toStoreSafe($gmcommentdividertemplate);
	$gmmoreentrytemplate = Gm_Utils::toStoreSafe($gmmoreentrytemplate);
	$gmmoreentrypagetemplate = Gm_Utils::toStoreSafe($gmmoreentrypagetemplate);
	$gmmorearchiveentrypagetemplate = Gm_Utils::toStoreSafe($gmmorearchiveentrypagetemplate);
	$gmpreviouslinktemplate = Gm_Utils::toStoreSafe($gmpreviouslinktemplate);
	$gmnextlinktemplate = Gm_Utils::toStoreSafe($gmnextlinktemplate);
	$gmpreviousmorelinktemplate = Gm_Utils::toStoreSafe($gmpreviousmorelinktemplate);
	$gmnextmorelinktemplate = Gm_Utils::toStoreSafe($gmnextmorelinktemplate);
	$gmarchivemasterindextemplate = Gm_Utils::toStoreSafe($gmarchivemasterindextemplate);
	$gmlogarchiveslinktemplate = Gm_Utils::toStoreSafe($gmlogarchiveslinktemplate);
	$gmentrypagelinktemplate = Gm_Utils::toStoreSafe($gmentrypagelinktemplate);
	$gmmoreentrypagelinktemplate = Gm_Utils::toStoreSafe($gmmoreentrypagelinktemplate);
	$gmlogarchiveslinkseparatortemplate = Gm_Utils::toStoreSafe($gmlogarchiveslinkseparatortemplate);
	$gmentrypagelinkseparatortemplate = Gm_Utils::toStoreSafe($gmentrypagelinkseparatortemplate);
	$gmentrypagelinkmonthseparatortemplate = Gm_Constants::EMPTY;
	$gmentrypagelinkdayseparatortemplate = Gm_Constants::EMPTY;
	$gmentrypagelinkyearseparatortemplate = Gm_Constants::EMPTY;
	$gmheadertemplate = Gm_Utils::toStoreSafe($gmheadertemplate);
	$gmfootertemplate = Gm_Utils::toStoreSafe($gmfootertemplate);
	$gmsidebartemplate = Gm_Utils::toStoreSafe($gmsidebartemplate);
	$gmentryseparatortemplate = Gm_Utils::toStoreSafe($gmentryseparatortemplate);
	$gmarchiveentryseparatortemplate = Gm_Utils::toStoreSafe($gmarchiveentryseparatortemplate);
	$gmmorearchiveentrytemplate = Gm_Utils::toStoreSafe($gmmorearchiveentrytemplate);
	$gmdatearchivetemplate = Gm_Utils::toStoreSafe($gmdatearchivetemplate);
	
	
	open (LAUGHINGFEETTWO, ">gm-templates.cgi") || &gm_dangermouse("Can't write to the templates file.  Please make sure that gm-templates.cgi is CHMODed to 666 and is in the same place as all your other Greymatter CGI files.");
	print LAUGHINGFEETTWO "$gmindextemplate\n";
	print LAUGHINGFEETTWO "$gmentrypagetemplate\n";
	print LAUGHINGFEETTWO "$gmarchiveindextemplate\n";
	print LAUGHINGFEETTWO "$gmarchiveentrypagetemplate\n";
	print LAUGHINGFEETTWO "$gmentrytemplate\n";
	print LAUGHINGFEETTWO "$gmarchiveentrytemplate\n";
	print LAUGHINGFEETTWO "$gmstayattoptemplate\n";
	print LAUGHINGFEETTWO "$gmdatetemplate\n";
	print LAUGHINGFEETTWO "$gmcommentstemplate\n";
	print LAUGHINGFEETTWO "$gmcommentsformtemplate\n";
	print LAUGHINGFEETTWO "$gmparaseparationtemplate\n";
	print LAUGHINGFEETTWO "$gmkarmaformtemplate\n";
	print LAUGHINGFEETTWO "$gmlinktargettemplate\n";
	print LAUGHINGFEETTWO "$gmdategroupingfootertemplate\n";
	print LAUGHINGFEETTWO "$gmkarmalinktemplate\n";
	print LAUGHINGFEETTWO "$gmcommentslinktemplate\n";
	print LAUGHINGFEETTWO "$gmcommentauthoremailtemplate\n";
	print LAUGHINGFEETTWO "$gmcommentauthorhomepagetemplate\n";
	print LAUGHINGFEETTWO "$gmcommentdividertemplate\n";
	print LAUGHINGFEETTWO "$gmmoreentrytemplate\n";
	print LAUGHINGFEETTWO "$gmmoreentrypagetemplate\n";
	print LAUGHINGFEETTWO "$gmmorearchiveentrypagetemplate\n";
	print LAUGHINGFEETTWO "$gmpreviouslinktemplate\n";
	print LAUGHINGFEETTWO "$gmnextlinktemplate\n";
	print LAUGHINGFEETTWO "$gmpreviousmorelinktemplate\n";
	print LAUGHINGFEETTWO "$gmnextmorelinktemplate\n";
	print LAUGHINGFEETTWO "$gmarchivemasterindextemplate\n";
	print LAUGHINGFEETTWO "$gmlogarchiveslinktemplate\n";
	print LAUGHINGFEETTWO "$gmentrypagelinktemplate\n";
	print LAUGHINGFEETTWO "$gmmoreentrypagelinktemplate\n";
	print LAUGHINGFEETTWO "$gmlogarchiveslinkseparatortemplate\n";
	print LAUGHINGFEETTWO "$gmentrypagelinkseparatortemplate\n";
	print LAUGHINGFEETTWO "\n";
	print LAUGHINGFEETTWO "\n";
	print LAUGHINGFEETTWO "\n";
	print LAUGHINGFEETTWO "$gmheadertemplate\n";
	print LAUGHINGFEETTWO "$gmfootertemplate\n";
	print LAUGHINGFEETTWO "$gmsidebartemplate\n";
	print LAUGHINGFEETTWO "\n";
	print LAUGHINGFEETTWO "$gmentryseparatortemplate\n";
	print LAUGHINGFEETTWO "$gmarchiveentryseparatortemplate\n";
	print LAUGHINGFEETTWO "$gmmorearchiveentrytemplate\n";
	print LAUGHINGFEETTWO "$gmdatearchivetemplate\n";
	print LAUGHINGFEETTWO qq(<A HREF="{{pagearchivelogindexlink}}">{{weekbeginningmonthmonth}}/{{weekbeginningdayday}}/{{weekbeginningyearyear}} to {{weekendingmonthmonth}}/{{weekendingdayday}}/{{weekendingyearyear}}</A>\n);
	print LAUGHINGFEETTWO qq(\n);
	print LAUGHINGFEETTWO qq(\n);
	print LAUGHINGFEETTWO qq(\n);
	print LAUGHINGFEETTWO qq(\n);
	print LAUGHINGFEETTWO qq(\n);
	print LAUGHINGFEETTWO qq(\n);
	print LAUGHINGFEETTWO qq(\n);
	print LAUGHINGFEETTWO qq(\n);
	print LAUGHINGFEETTWO qq(\n);
	print LAUGHINGFEETTWO qq(\n);
	print LAUGHINGFEETTWO qq(<html>|*|<head>|*|<title>{{monthmonth}}/{{dayday}}/{{year}}: {{popuptitle}}</TITLE>|*|<META NAME="Generator" CONTENT="Greymatter {{gmversion}}">|*|</HEAD>|*||*|<BODY BGCOLOR="#000000" TOPMARGIN=0 LEFTMARGIN=0 MARGINHEIGHT=0 MARGINWIDTH=0 onBlur="window.close\(\)">|*||*|<IMG BORDER=0 SRC="{{entrieswebpath}}/{{popupfile}}" ALT="{{popuptitle}}" HEIGHT={{popupheight}} WIDTH={{popupwidth}}>|*||*|</BODY>|*|</HTML>\n);
	print LAUGHINGFEETTWO qq(<a href="#" onMouseOver="window.status='{{monthmonth}}/{{dayday}}/{{year}}: {{popuptitle}} \(opens popup window\)';return true" onMouseOut="window.status='';return true" onClick="window.open\('{{entrieswebpath}}/{{popuphtmlfile}}','{{randomnumber 1111-9999}}','width={{popupwidth}},height={{popupheight}},directories=no,location=no,menubar=no,scrollbars=no,status=no,toolbar=no,resizable=no,left=0,top=0,screenx=50,screeny=50'\);return false">\n);
	print LAUGHINGFEETTWO qq(<form action="{{cgiwebpath}}/gm-comments.cgi" METHOD=POST><INPUT TYPE=TEXT NAME="gmsearch" SIZE=20> <INPUT TYPE=SUBMIT VALUE="Search"></FORM>\n);
	print LAUGHINGFEETTWO qq(<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">|*|<HTML>|*|<HEAD>|*|<TITLE>Search Results</TITLE>|*|<META NAME="Generator" CONTENT="Greymatter {{gmversion}}">|*|</HEAD>|*||*|<BODY BGCOLOR="#FFFFFF">|*||*|<P ALIGN=CENTER>|*|<B>Search results for "{{searchterm}}" \({{searchmatches}} matches\)</B>|*|</P>|*||*|{{searchresults}}|*||*|<P ALIGN=CENTER>|*|[<A HREF="{{pageindexlink}}">Return To Main Index</A>]|*|</P><P ALIGN=CENTER>|*|{{gmicon}}|*|</P>|*||*|</BODY>|*|</HTML>\n);
	print LAUGHINGFEETTWO qq(<P ALIGN=JUSTIFY>|*|<A HREF="{{pagelink}}">{{monthmonth}}/{{dayday}}/{{yearyear}}: {{entrysubject}}</A>|*|<P ALIGN=JUSTIFY><I>|*|{{entrymainbodyfirstwords 10}}...|*|</I></BLOCKQUOTE></P>|*|</BLOCKQUOTE></P>\n);
	print LAUGHINGFEETTWO qq(<TABLE BORDER=2 CELLPADDING=5 CELLSPACING=0><TR><TD ALIGN=CENTER COLSPAN=7>{{monthword}} {{yearyear}}</TD></TR><TR><TD ALIGN=CENTER>S</TD><TD ALIGN=CENTER>M</TD><TD ALIGN=CENTER>T</TD><TD ALIGN=CENTER>W</TD><TD ALIGN=CENTER>T</TD><TD ALIGN=CENTER>F</TD><TD ALIGN=CENTER>S</TD></TR>\n);
	print LAUGHINGFEETTWO qq(</TABLE>\n);
	print LAUGHINGFEETTWO qq(<TD ALIGN=CENTER>&#160;</TD>\n);
	print LAUGHINGFEETTWO qq(<TD ALIGN=CENTER>{{day}}</TD>\n);
	print LAUGHINGFEETTWO qq(<TD ALIGN=CENTER><A HREF="{{pagelink}}">{{day}}</A></TD>\n);
	print LAUGHINGFEETTWO qq(\n);
	print LAUGHINGFEETTWO qq( [{{day}}] \n);
	print LAUGHINGFEETTWO qq( [<A HREF="{{pagelink}}">{{day}}</A>] \n);
	print LAUGHINGFEETTWO qq(<A NAME="comments">|*||*|<P ALIGN=CENTER>|*|<B>Previewing Your Comment</B>|*|</P>|*|\n);
	print LAUGHINGFEETTWO qq(<P ALIGN=CENTER>|*|A preview of your new comment is shown above as it will appear on this page.  Click "Post This Comment" below to post it, or click the back button on your browser to re-edit it.|*|</P><P ALIGN=CENTER><CENTER>|*|<FORM ACTION="{{cgiwebpath}}/gm-comments.cgi" METHOD=POST>|*|<INPUT TYPE=HIDDEN NAME="newcommententrynumber" VALUE="{{entrynumber}}">|*|<INPUT TYPE=HIDDEN NAME="newcommentauthor" VALUE="{{previewcommentauthor}}">|*|<INPUT TYPE=HIDDEN NAME="newcommentemail" VALUE="{{previewcommentemail}}">|*|<INPUT TYPE=HIDDEN NAME="newcommenthomepage" VALUE="{{previewcommenthomepage}}">|*|<INPUT TYPE=HIDDEN NAME="newcommentbody" VALUE="{{previewcommentbody}}">|*|<INPUT TYPE=SUBMIT VALUE="Post This Comment">|*|</FORM>|*|</CENTER></P>\n);
	print LAUGHINGFEETTWO qq(No Comments\n);
	print LAUGHINGFEETTWO qq(1 Comment\n);
	print LAUGHINGFEETTWO qq({{commentsnumber}} comments\n);
	print LAUGHINGFEETTWO qq(<BR>\n);
	close (LAUGHINGFEETTWO);
	
	
	_old_gm_readconfig();
	$versionsetup = $gmversion;
	$cookiesallowed = Gm_Constants::NO;
	$logarchivesuffix = $entrysuffix;
	$censorlist = Gm_Constants::EMPTY;
	$censorenabled = Gm_Constants::NEITHER;
	$keepmonthlyarchives = Gm_Constants::YES;
	$defaultentrylistview = Gm_Constants::MAIN;
	$linktocalendarentries = Gm_Constants::ALL;
	$automaticrebuilddefault = Gm_Constants::YES;
	$commententrylistonlyifokay = Gm_Constants::YES;
	$otherfilelist = Gm_Constants::EMPTY;
	$otherfilelistentryrebuild = Gm_Constants::NO;
	$archiveformat = Gm_Constants::MONTH;
	$inlineformatting = Gm_Constants::ENTRIES;
	$uploadfilesallowed = Gm_Constants::EMPTY;
	$uploadfilesizelimit = "0";
	_old_gm_writeconfig();
	open (LAUGHINGFEETTHREE, "<gm-authors.cgi") || &gm_dangermouse("Can't read the authors file.  Please make sure that gm-authors.cgi is CHMODed to 666 and is in the same place as all your other Greymatter CGI files.");
	@gmauthorupgradedata = <LAUGHINGFEETTHREE>;
	close (LAUGHINGFEETTHREE);
	open (LAUGHINGFEETFOUR, ">gm-authors.cgi") || &gm_dangermouse("Can't write to the authors file.  Please make sure that gm-authors.cgi is CHMODed to 666 and is in the same place as all your other Greymatter CGI files.");
	foreach $thisupgradeauthorline (@gmauthorupgradedata) {
		chomp ($thisupgradeauthorline);
		unless ($thisupgradeauthorline eq Gm_Constants::EMPTY) {
			($thisupgradeauthorname, $thisupgradeauthorpassword, $thisupgradeauthoremail, $thisupgradeauthorhomepage, $thisupgradeauthordate, $thisupgradeauthorposts, $thisupgradeauthorentryaccess, $thisupgradeauthorentryeditaccess, $thisupgradeauthorconfigurationaccess, $thisupgradeauthortemplateaccess, $thisupgradeauthorauthoraccess, $thisupgradeauthorrebuildaccess, $thisupgradeauthorcplogaccess) = split (/\|/, $thisupgradeauthorline);
			$thisupgradeauthorbookmarkletaccess = Gm_Constants::N;
			$thusupgradeauthoruploadaccess = Gm_Constants::N;
			$thisupgradeauthorloginaccess = Gm_Constants::Y;
			if ($thisupgradeauthorentryaccess eq Gm_Constants::Y ) { $thisupgradeauthorbookmarkletaccess = Gm_Constants::Y; }
			if ($thisupgradeauthorconfigurationaccess eq Gm_Constants::Y ) { $thisupgradeauthoruploadaccess = Gm_Constants::Y; }
			print LAUGHINGFEETFOUR "$thisupgradeauthorname|$thisupgradeauthorpassword|$thisupgradeauthoremail|$thisupgradeauthorhomepage|$thisupgradeauthordate|$thisupgradeauthorposts|$thisupgradeauthorentryaccess|$thisupgradeauthorentryeditaccess|$thisupgradeauthorconfigurationaccess|$thisupgradeauthortemplateaccess|$thisupgradeauthorauthoraccess|$thisupgradeauthorrebuildaccess|$thisupgradeauthorcplogaccess|$thisupgradeauthorbookmarkletaccess|$thisupgradeauthoruploadaccess|$thisupgradeauthorloginaccess\n";
		}
	}
	close (LAUGHINGFEETFOUR);
}

if ($IN{'oldsetupversion'} eq "1.2" || $IN{'oldsetupversion'} eq "1.21" || 
		$IN{'oldsetupversion'} eq "1.21a" || $IN{'oldsetupversion'} eq "1.21b" || $IN{'oldsetupversion'} eq "1.21c" || 
		$IN{'oldsetupversion'} eq "1.21d" || $IN{'oldsetupversion'} eq "1.21e" || $IN{'oldsetupversion'} eq "1.3" || 
		$IN{'oldsetupversion'} eq "1.3a" ) {
	## cleaning up some reused templates in 1.3.1
	_old_gm_readtemplates;
	$gmtemplates[12] = "";
	$gmtemplates[13] = "";
	open (LAUGHINGFEETFOUR, ">gm-templates.cgi") || &gm_dangermouse("Can't write to the templates file.  Please 
	make sure that gm-templates.cgi is CHMODed to 666 and is in the same place as all your other Greymatter CGI 
	files.");
	foreach $thistemplate (@gmtemplates) {
			$thistemplate =~ s(\n)(\|\*\|)g;
			print LAUGHINGFEETFOUR "$thistemplate\n";
	}
	close (LAUGHINGFEETFOUR);		
}

use Gm_Upgrade;
Gm_Upgrade::upgradeGm( version=>$IN{'oldsetupversion'}, errHandler=>\&Gm_Web::displayAdminErrorExit );

# &gm_readconfig;  ## configs should be in correct format now
# $newConfigs->{'gmversionsetup'} = $gmversion;
# Gm_Storage::setConfigs( configs=>$newConfigs, errHandler=>\&Gm_Web::displayAdminErrorExit );

&gm_readtemplates;

# merged 10/2/2003 

gm_writetocplog("<B><FONT COLOR=\"#0000FF\">$IN{'authorname'} upgraded Greymatter 
from an older version ($IN{'oldsetupversion'}) to a newer version ($gmversion)</FONT></B>");

$statusnote = '<span class="status_msg">Upgrade complete!  Welcome back, '.$IN{'authorname'}.
	'.<BR>New features in '.$gmversion.' include Bookmarklets for everyone and more.  A security enhancement '.
	'has been added so that gm-upload.cgi is no longer required.  The upload feature itself has not been '.
	'changed, merely moved into the main code.</span><P>';

&gm_frontpage;
}

##  TODO:  ADDRESS THIS ISSUE
# ISSUE: this is needed by legacy code, it is not worth the time and effort to refactor as it is 
#  very crusty.  Unfortunatly the solution will be tell users to upgrade to the last
# version whitch contains this bit of file.  Then to move forward from there.
#
#  It sucks, we all know it, but every app has this.  The real reason I don't want to
# touch this code is because I CANNOT TEST IT.  And I will not break it until the last moment.
# -----------------
## LATER TODO: MOVE TO GM_UPGRADE
sub _old_gm_readtemplates {

open (FUNNYFEETTAMMY, "<./gm-templates.cgi") || &gm_dangermouse("Can't read the templates file.  Please make sure that gm-templates.cgi is CHMODed to 666 and is in the same place as all your other Greymatter CGI files; also try running Diagnostics & Repair from the Configuration screen.");
@gmtemplates = <FUNNYFEETTAMMY>;
close (FUNNYFEETTAMMY);

$gmcounter = 0;

foreach (@gmtemplates) {
	chomp ($gmtemplates[$gmcounter]);
	$gmtemplates[$gmcounter] =~ s/\|\*\|/\n/g;
	$gmcounter++;
}

$gmindextemplate = $gmtemplates[0];
$gmentrypagetemplate = $gmtemplates[1];
$gmarchiveindextemplate = $gmtemplates[2];
$gmarchiveentrypagetemplate = $gmtemplates[3];
$gmentrytemplate = $gmtemplates[4];
$gmarchiveentrytemplate = $gmtemplates[5];
$gmstayattoptemplate = $gmtemplates[6];
$gmdatetemplate = $gmtemplates[7];
$gmcommentstemplate = $gmtemplates[8];
$gmcommentsformtemplate = $gmtemplates[9];
$gmparaseparationtemplate = $gmtemplates[10];
$gmkarmaformtemplate = $gmtemplates[11];
# new templates {{target}} and dategrouping footer take the place of the long-deprecated ones: linear 9/18/2003
# new in 1.3
$gmlinktargettemplate = $gmtemplates[12];
$gmdategroupingfootertemplate = $gmtemplates[13];
# merged 9/18/2003 
$gmkarmalinktemplate = $gmtemplates[14];
$gmcommentslinktemplate = $gmtemplates[15];
$gmcommentauthoremailtemplate = $gmtemplates[16];
$gmcommentauthorhomepagetemplate = $gmtemplates[17];
$gmcommentdividertemplate = $gmtemplates[18];
$gmmoreentrytemplate = $gmtemplates[19];
$gmmoreentrypagetemplate = $gmtemplates[20];
$gmmorearchiveentrypagetemplate = $gmtemplates[21];
$gmpreviouslinktemplate = $gmtemplates[22];
$gmnextlinktemplate = $gmtemplates[23];
$gmpreviousmorelinktemplate = $gmtemplates[24];
$gmnextmorelinktemplate = $gmtemplates[25];
$gmarchivemasterindextemplate = $gmtemplates[26];
$gmlogarchiveslinktemplate = $gmtemplates[27];
$gmentrypagelinktemplate = $gmtemplates[28];
$gmmoreentrypagelinktemplate = $gmtemplates[29];
$gmlogarchiveslinkseparatortemplate = $gmtemplates[30];
$gmentrypagelinkseparatortemplate = $gmtemplates[31];
$gmentrypagelinkmonthseparatortemplate = $gmtemplates[32];
$gmentrypagelinkdayseparatortemplate = $gmtemplates[33];
$gmentrypagelinkyearseparatortemplate = $gmtemplates[34];
$gmheadertemplate = $gmtemplates[35];
$gmfootertemplate = $gmtemplates[36];
$gmsidebartemplate = $gmtemplates[37];
$gmcustomlinktemplate = $gmtemplates[38];
$gmentryseparatortemplate = $gmtemplates[39];
$gmarchiveentryseparatortemplate = $gmtemplates[40];
$gmmorearchiveentrytemplate = $gmtemplates[41];
$gmdatearchivetemplate = $gmtemplates[42];
$gmlogarchiveslinkweeklytemplate = $gmtemplates[43];
$gmcustomonetemplate = $gmtemplates[44];
$gmcustomtwotemplate = $gmtemplates[45];
$gmcustomthreetemplate = $gmtemplates[46];
$gmcustomfourtemplate = $gmtemplates[47];
$gmcustomfivetemplate = $gmtemplates[48];
$gmcustomsixtemplate = $gmtemplates[49];
$gmcustomseventemplate = $gmtemplates[50];
$gmcustomeighttemplate = $gmtemplates[51];
$gmcustomninetemplate = $gmtemplates[52];
$gmcustomtentemplate = $gmtemplates[53];
$gmpopuppagetemplate = $gmtemplates[54];
$gmpopupcodetemplate = $gmtemplates[55];
$gmsearchformtemplate = $gmtemplates[56];
$gmsearchresultspagetemplate = $gmtemplates[57];
$gmsearchresultsentrytemplate = $gmtemplates[58];
$gmcalendartablebeginningtemplate = $gmtemplates[59];
$gmcalendartableendingtemplate = $gmtemplates[60];
$gmcalendarblankcelltemplate = $gmtemplates[61];
$gmcalendarfullcelltemplate = $gmtemplates[62];
$gmcalendarfullcelllinktemplate = $gmtemplates[63];
$gmcalendarweekblankdaytemplate = $gmtemplates[64];
$gmcalendarweekfulldaytemplate = $gmtemplates[65];
$gmcalendarweekfulldaylinktemplate = $gmtemplates[66];
$gmcommentpreviewdividertemplate = $gmtemplates[67];
$gmcommentpreviewformtemplate = $gmtemplates[68];
$gmsmartlinknocommentstemplate = $gmtemplates[69];
$gmsmartlinkonecommenttemplate = $gmtemplates[70];
$gmsmartlinkmanycommentstemplate = $gmtemplates[71];
$gmlinebreaktemplate = $gmtemplates[72];
$gmcommentlinktargettemplate = $gmtemplates[73];
$gmsmartentrymoodtemplate = $gmtemplates[74];
$gmsmartentrymusictemplate = $gmtemplates[75];
$gmdategroupingfooterarchivetemplate = $gmtemplates[76];
$gmsmartemoticonscodetemplate = $gmtemplates[77];
$gmcookiescodetemplate = $gmtemplates[78];
}

##  TODO:  ADDRESS THIS ISSUE
# ISSUE: this is needed by legacy code, it is not worth the time and effort to refactor as it is 
#  very crusty.  Unfortunatly the solution will be tell users to upgrade to the last
# version whitch contains this bit of file.  Then to move forward from there.
#
#  It sucks, we all know it, but every app has this.  The real reason I don't want to
# touch this code is because I CANNOT TEST IT.  And I will not break it until the last moment.
## TODO: Move this to storage, since that is where it should be, with a version that it reads at
# -----------------
sub _old_gm_readconfig {

open (FUNNYFEETCOCO, "<./gm-config.cgi") || &gm_dangermouse("Can't read the configuration file.  Please make sure that gm-config.cgi is CHMODed to 666 and is in the same place as all your other Greymatter CGI files; also try running Diagnostics & Repair from the Configuration screen.");
@gmconfig = <FUNNYFEETCOCO>;
close (FUNNYFEETCOCO);

$gmcounter = 0;

foreach (@gmconfig) {
	chomp ($gmconfig[$gmcounter]);
	$gmcounter++;
}

$LogPath = $gmconfig[0];
$EntriesPath = $gmconfig[1];
$LogWebPath = $gmconfig[2];
$EntriesWebPath = $gmconfig[3];
$NotifyEmail = $gmconfig[4];
$indexfilename = $gmconfig[5];
$entrysuffix = $gmconfig[6];
$indexdays = $gmconfig[7];
$serveroffset = $gmconfig[8];
$timezone = $gmconfig[9];
$keeplog = $gmconfig[10];
$posttoarchives = $gmconfig[11];
$allowkarmadefault = $gmconfig[12];
$allowcommentsdefault = $gmconfig[13];
$commentsorder = $gmconfig[14];
$generateentrypages = $gmconfig[15];
$allowhtmlincomments = $gmconfig[16];
$logkarmaandcomments = $gmconfig[17];
$mailprog = $gmconfig[18];
$NotifyForStatus = $gmconfig[19];
$autolinkurls = $gmconfig[20];
$striplinesfromcomments = $gmconfig[21];
$allowmultiplekarmavotes = $gmconfig[22];
$versionsetup = $gmconfig[23];
$cgilocalpath = $gmconfig[24];
$cgiwebpath = $gmconfig[25];
$concurrentmainandarchives = $gmconfig[26];
$keeparchivemasterindex = $gmconfig[27];
$entrylistsortorder = $gmconfig[28];
$allowkarmaorcomments = $gmconfig[29];
$entrylistcountnumber = $gmconfig[30];
$cookiesallowed = $gmconfig[31];
$logarchivesuffix = $gmconfig[32];
$censorlist = $gmconfig[33];
$censorenabled = $gmconfig[34];
$keepmonthlyarchives = $gmconfig[35];
$defaultentrylistview = $gmconfig[36];
$linktocalendarentries = $gmconfig[37];
$automaticrebuilddefault = $gmconfig[38];
$commententrylistonlyifokay = $gmconfig[39];
$otherfilelist = $gmconfig[40];
$otherfilelistentryrebuild = $gmconfig[41];
$archiveformat = $gmconfig[42];
$inlineformatting = $gmconfig[43];
$uploadfilesallowed = $gmconfig[44];
$uploadfilesizelimit = $gmconfig[45];
$emoticonspath = $gmconfig[46];
$keepphphacklog = $gmconfig[47];
$mailhacknotice = $gmconfig[48];
$emoticonsallowed = $gmconfig[49];
}

# ---------------------
# write the config file
# ---------------------
##  TODO:  ADDRESS THIS ISSUE
# ISSUE: this is needed by legacy code, it is not worth the time and effort to refactor as it is 
#  very crusty.  Unfortunatly the solution will be tell users to upgrade to the last
# version whitch contains this bit of file.  Then to move forward from there.
#
#  It sucks, we all know it, but every app has this.  The real reason I don't want to
# touch this code is because I don't feel I can adaquatly test it.  And I will not break it until the last moment.
## TODO: Move this to storage, since that is where it should be, with a version that it reads at
# -----------------
sub _old_gm_writeconfig {

if ($versionsetup eq "") { $versionsetup = $gmversion; }

open (FUNNYFEETCONNIE, ">./gm-config.cgi") || &gm_dangermouse("Can't write to the configuration file.  Please make sure that gm-config.cgi is CHMODed to 666 and is in the same place as all your other Greymatter CGI files; also try running Diagnostics & Repair from the Configuration screen.");
print FUNNYFEETCONNIE "$LogPath\n";
print FUNNYFEETCONNIE "$EntriesPath\n";
print FUNNYFEETCONNIE "$LogWebPath\n";
print FUNNYFEETCONNIE "$EntriesWebPath\n";
print FUNNYFEETCONNIE "$NotifyEmail\n";
print FUNNYFEETCONNIE "$indexfilename\n";
print FUNNYFEETCONNIE "$entrysuffix\n";
print FUNNYFEETCONNIE "$indexdays\n";
print FUNNYFEETCONNIE "$serveroffset\n";
print FUNNYFEETCONNIE "$timezone\n";
print FUNNYFEETCONNIE "$keeplog\n";
print FUNNYFEETCONNIE "$posttoarchives\n";
print FUNNYFEETCONNIE "$allowkarmadefault\n";
print FUNNYFEETCONNIE "$allowcommentsdefault\n";
print FUNNYFEETCONNIE "$commentsorder\n";
print FUNNYFEETCONNIE "$generateentrypages\n";
print FUNNYFEETCONNIE "$allowhtmlincomments\n";
print FUNNYFEETCONNIE "$logkarmaandcomments\n";
print FUNNYFEETCONNIE "$mailprog\n";
print FUNNYFEETCONNIE "$NotifyForStatus\n";
print FUNNYFEETCONNIE "$autolinkurls\n";
print FUNNYFEETCONNIE "$striplinesfromcomments\n";
print FUNNYFEETCONNIE "$allowmultiplekarmavotes\n";
print FUNNYFEETCONNIE "$versionsetup\n";
print FUNNYFEETCONNIE "$cgilocalpath\n";
print FUNNYFEETCONNIE "$cgiwebpath\n";
print FUNNYFEETCONNIE "$concurrentmainandarchives\n";
print FUNNYFEETCONNIE "$keeparchivemasterindex\n";
print FUNNYFEETCONNIE "$entrylistsortorder\n";
print FUNNYFEETCONNIE "$allowkarmaorcomments\n";
print FUNNYFEETCONNIE "$entrylistcountnumber\n";
print FUNNYFEETCONNIE "$cookiesallowed\n";
print FUNNYFEETCONNIE "$logarchivesuffix\n";
print FUNNYFEETCONNIE "$censorlist\n";
print FUNNYFEETCONNIE "$censorenabled\n";
print FUNNYFEETCONNIE "$keepmonthlyarchives\n";
print FUNNYFEETCONNIE "$defaultentrylistview\n";
print FUNNYFEETCONNIE "$linktocalendarentries\n";
print FUNNYFEETCONNIE "$automaticrebuilddefault\n";
print FUNNYFEETCONNIE "$commententrylistonlyifokay\n";
print FUNNYFEETCONNIE "$otherfilelist\n";
print FUNNYFEETCONNIE "$otherfilelistentryrebuild\n";
print FUNNYFEETCONNIE "$archiveformat\n";
print FUNNYFEETCONNIE "$inlineformatting\n";
print FUNNYFEETCONNIE "$uploadfilesallowed\n";
print FUNNYFEETCONNIE "$uploadfilesizelimit\n";
print FUNNYFEETCONNIE "$emoticonspath\n";
print FUNNYFEETCONNIE "$keepphphacklog\n";
print FUNNYFEETCONNIE "$mailhacknotice\n";
print FUNNYFEETCONNIE "$emoticonsallowed\n";
close (FUNNYFEETCONNIE);

}


# ----------------------
# rebuild update process
# ----------------------

sub gm_rebuildupdate {
	die( "gm_rebuildupdate has been DEPRECATED");
}
